# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# @file Makefile.am
# @brief an input file for automake tool
#
# (c) 2013-2014 by Mega Limited, Wellsford, New Zealand
#
# This file is part of the MEGA SDK - Client Access Engine.
#
# Applications using the MEGA API must present a valid application key
# and comply with the the rules set forth in the Terms of Service.
#
# The MEGA SDK is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# @copyright Simplified (2-clause) BSD License.
#
# You should have received a copy of the license along with this
# program.

# Automake Support
# From git://git.sv.gnu.org/autoconf-archive.git m4/ax_prog_doxygen.m4
#
# LICENSE
#
#   Copyright (c) 2009 Oren Ben-Kiki <oren@ben-kiki.org>
#
#   Copying and distribution of this file, with or without modification, are
#   permitted in any medium without royalty provided the copyright notice
#   and this notice are preserved. This file is offered as-is, without any
#   warranty.
#
# The following is a template aminclude.am file for use with Automake.
# Make targets and variables values are controlled by the various
# DX_COND_* conditionals set by autoconf.
#
# The provided targets are:
#
# doxygen-doc: Generate all doxygen documentation.
#
# doxygen-run: Run doxygen, which will generate some of the
#              documentation (HTML, CHM, CHI, MAN, RTF, XML)
#              but will not do the post processing required
#              for the rest of it (PS, PDF, and some MAN).
#
# doxygen-man: Rename some doxygen generated man pages.
#
# doxygen-ps:  Generate doxygen PostScript documentation.
#
# doxygen-pdf: Generate doxygen PDF documentation.
#
# Note that by default these are not integrated into the automake targets.
# If doxygen is used to generate man pages, you can achieve this
# integration by setting man3_MANS to the list of man pages generated and
# then adding the dependency:
#
# $(man3_MANS): doxygen-doc
#
# This will cause make to run doxygen and generate all the documentation.
#
# The following variable is intended for use in Makefile.am:
#
# DX_CLEANFILES = everything to clean.
#
# Then add this variable to MOSTLYCLEANFILES.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libmega
pkgincludedir = $(includedir)/libmega
pkglibdir = $(libdir)/libmega
pkglibexecdir = $(libexecdir)/libmega
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = -I$(top_srcdir)/include/mega/win32
am__append_2 = -I$(top_srcdir)/include/mega/posix
#am__append_3 = -I$(top_srcdir)/include/mega/gfx
noinst_PROGRAMS = $(am__EXEEXT_5)
#am__append_4 = -Wl,-static -all-static
am__append_5 = src/megaapi_impl.cpp \
	src/megaapi.cpp
am__append_6 = src/gfx/freeimage.cpp
am__append_7 = src/crypto/sodium.cpp
#am__append_8 = src/mega_http_parser.cpp

# IOS specific
#am__append_9 = src/gfx/GfxProcCG.mm
#am__append_10 = src/osx/osxutils.mm
#am__append_11 = -framework SystemConfiguration -framework Foundation

# win32 sources
#am__append_12 = src/win32/fs.cpp src/win32/console.cpp \
#	src/win32/net.cpp src/win32/waiter.cpp \
#	src/win32/consolewaiter.cpp
#am__append_13 = src/thread/posixthread.cpp
##am__append_14 = src/thread/win32thread.cpp

# posix sources
am__append_15 = src/posix/fs.cpp src/posix/console.cpp \
	src/posix/net.cpp src/posix/waiter.cpp \
	src/posix/consolewaiter.cpp \
	src/thread/posixthread.cpp
#am__append_16 = src/mega_glob.c
#am__append_17 = examples/linux/megafuse
bin_PROGRAMS = $(am__EXEEXT_3)
am__append_18 = $(EXAMPLES)
#am__append_19 = -static
TESTS = tests/misc_test$(EXEEXT) tests/sdk_test$(EXEEXT) \
	tests/purge_account$(EXEEXT)
#am__append_20 = $(TESTS)
#am__append_21 = bindings/python/megaapi_wrap.cpp \
#	bindings/python/megaapi_wrap.h \
#	bindings/python/mega.py \
#	bindings/python/mega.pyc
#am__append_22 = bindings/php/megaapi_wrap.cpp \
#	bindings/php/megaapi_wrap.h \
#	bindings/php/php_mega.h bindings/php/mega.php
am__append_23 = bindings/java/megaapi_wrap.cpp \
	bindings/java/megaapi_wrap.h \
	bindings/java/nz/mega/sdk/java_mega.h \
	bindings/java/nz/mega/sdk/mega.java \
	bindings/java/nz/mega/sdk/MegaAccountBalance.java \
	bindings/java/nz/mega/sdk/MegaAccountDetails.java \
	bindings/java/nz/mega/sdk/MegaAccountPurchase.java \
	bindings/java/nz/mega/sdk/MegaAccountSession.java \
	bindings/java/nz/mega/sdk/MegaAccountTransaction.java \
	bindings/java/nz/mega/sdk/MegaApi.java \
	bindings/java/nz/mega/sdk/MegaError.java \
	bindings/java/nz/mega/sdk/MegaGfxProcessor.java \
	bindings/java/nz/mega/sdk/MegaGlobalListener.java \
	bindings/java/nz/mega/sdk/megaJNI.java \
	bindings/java/nz/mega/sdk/MegaListener.java \
	bindings/java/nz/mega/sdk/MegaLogger.java \
	bindings/java/nz/mega/sdk/MegaNode.java \
	bindings/java/nz/mega/sdk/MegaNodeList.java \
	bindings/java/nz/mega/sdk/MegaPricing.java \
	bindings/java/nz/mega/sdk/MegaProxy.java \
	bindings/java/nz/mega/sdk/MegaRequest.java \
	bindings/java/nz/mega/sdk/MegaRequestListener.java \
	bindings/java/nz/mega/sdk/MegaShare.java \
	bindings/java/nz/mega/sdk/MegaShareList.java \
	bindings/java/nz/mega/sdk/MegaTransfer.java \
	bindings/java/nz/mega/sdk/MegaTransferListener.java \
	bindings/java/nz/mega/sdk/MegaTransferList.java \
	bindings/java/nz/mega/sdk/MegaTreeProcessor.java \
	bindings/java/nz/mega/sdk/MegaUser.java \
	bindings/java/nz/mega/sdk/MegaUserList.java
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pkg_swig.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/ax_swig_enable_cxx.m4 \
	$(top_srcdir)/m4/ax_swig_multi_module_support.m4 \
	$(top_srcdir)/m4/ax_swig_python.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/m4/curlchk.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__dist_noinst_PYTHON_DIST) \
	$(am__pkgpython_PYTHON_DIST) $(noinst_HEADERS) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/mega/config.h
CONFIG_CLEAN_FILES = libmega.pc doc/Doxyfile
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(phpdir)" \
	"$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(pkgpyexecdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgpythondir)" \
	"$(DESTDIR)$(pkgpythondir)" "$(DESTDIR)$(pkgconfigdir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(php_LTLIBRARIES) \
	$(pkglib_LTLIBRARIES) $(pkgpyexec_LTLIBRARIES)
am__bindings_java_libmegajava_la_SOURCES_DIST =  \
	$(top_srcdir)/bindings/megaapi.i
am_bindings_java_libmegajava_la_OBJECTS =
am__dirstamp = $(am__leading_dot)dirstamp
nodist_bindings_java_libmegajava_la_OBJECTS = bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo
bindings_java_libmegajava_la_OBJECTS =  \
	$(am_bindings_java_libmegajava_la_OBJECTS) \
	$(nodist_bindings_java_libmegajava_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_bindings_java_libmegajava_la_rpath = -rpath \
	$(pkglibdir)
am__bindings_php_libmegaphp_la_SOURCES_DIST =  \
	$(top_srcdir)/bindings/megaapi.i
am_bindings_php_libmegaphp_la_OBJECTS =
#nodist_bindings_php_libmegaphp_la_OBJECTS = bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo
bindings_php_libmegaphp_la_OBJECTS =  \
	$(am_bindings_php_libmegaphp_la_OBJECTS) \
	$(nodist_bindings_php_libmegaphp_la_OBJECTS)
bindings_php_libmegaphp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bindings_php_libmegaphp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_bindings_php_libmegaphp_la_rpath = -rpath $(phpdir)
am__DEPENDENCIES_1 =
#bindings_python__mega_la_DEPENDENCIES =  \
#	$(top_builddir)/src/libmega.la \
#	$(am__DEPENDENCIES_1)
am__bindings_python__mega_la_SOURCES_DIST =  \
	$(top_srcdir)/bindings/megaapi.i
am_bindings_python__mega_la_OBJECTS =
#nodist_bindings_python__mega_la_OBJECTS = bindings/python/bindings_python__mega_la-megaapi_wrap.lo
bindings_python__mega_la_OBJECTS =  \
	$(am_bindings_python__mega_la_OBJECTS) \
	$(nodist_bindings_python__mega_la_OBJECTS)
bindings_python__mega_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(bindings_python__mega_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_bindings_python__mega_la_rpath = -rpath \
#	$(pkgpyexecdir)
src_libmega_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#src_libmega_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__src_libmega_la_SOURCES_DIST = src/megaclient.cpp src/attrmap.cpp \
	src/backofftimer.cpp src/base64.cpp src/command.cpp \
	src/commands.cpp src/db.cpp src/fileattributefetch.cpp \
	src/file.cpp src/filefingerprint.cpp src/filesystem.cpp \
	src/gfx.cpp src/http.cpp src/json.cpp \
	src/mediafileattribute.cpp src/node.cpp src/pubkeyaction.cpp \
	src/request.cpp src/serialize64.cpp src/share.cpp \
	src/sharenodekeys.cpp src/sync.cpp src/transfer.cpp \
	src/transferslot.cpp src/treeproc.cpp src/user.cpp \
	src/utils.cpp src/logging.cpp src/waiterbase.cpp src/proxy.cpp \
	src/crypto/cryptopp.cpp src/db/sqlite.cpp \
	src/mega_utf8proc.cpp src/gfx/external.cpp \
	src/pendingcontactrequest.cpp src/mega_zxcvbn.cpp \
	src/megaapi_impl.cpp src/megaapi.cpp src/gfx/freeimage.cpp \
	src/crypto/sodium.cpp src/mega_http_parser.cpp \
	src/gfx/GfxProcCG.mm src/osx/osxutils.mm src/win32/fs.cpp \
	src/win32/console.cpp src/win32/net.cpp src/win32/waiter.cpp \
	src/win32/consolewaiter.cpp src/thread/posixthread.cpp \
	src/thread/win32thread.cpp src/posix/fs.cpp \
	src/posix/console.cpp src/posix/net.cpp src/posix/waiter.cpp \
	src/posix/consolewaiter.cpp src/mega_glob.c
am__objects_1 =  \
	src/src_libmega_la-megaapi_impl.lo \
	src/src_libmega_la-megaapi.lo
am__objects_2 =  \
	src/gfx/src_libmega_la-freeimage.lo
am__objects_3 = src/crypto/src_libmega_la-sodium.lo
#am__objects_4 =  \
#	src/src_libmega_la-mega_http_parser.lo
#am__objects_5 = src/gfx/src_libmega_la-GfxProcCG.lo
#am__objects_6 = src/osx/src_libmega_la-osxutils.lo
#am__objects_7 = src/win32/src_libmega_la-fs.lo \
#	src/win32/src_libmega_la-console.lo \
#	src/win32/src_libmega_la-net.lo \
#	src/win32/src_libmega_la-waiter.lo \
#	src/win32/src_libmega_la-consolewaiter.lo
#am__objects_8 = src/thread/src_libmega_la-posixthread.lo
##am__objects_9 = src/thread/src_libmega_la-win32thread.lo
am__objects_10 = src/posix/src_libmega_la-fs.lo \
	src/posix/src_libmega_la-console.lo \
	src/posix/src_libmega_la-net.lo \
	src/posix/src_libmega_la-waiter.lo \
	src/posix/src_libmega_la-consolewaiter.lo \
	src/thread/src_libmega_la-posixthread.lo
#am__objects_11 = src/mega_glob.lo
am_src_libmega_la_OBJECTS = src/src_libmega_la-megaclient.lo \
	src/src_libmega_la-attrmap.lo \
	src/src_libmega_la-backofftimer.lo \
	src/src_libmega_la-base64.lo src/src_libmega_la-command.lo \
	src/src_libmega_la-commands.lo src/src_libmega_la-db.lo \
	src/src_libmega_la-fileattributefetch.lo \
	src/src_libmega_la-file.lo \
	src/src_libmega_la-filefingerprint.lo \
	src/src_libmega_la-filesystem.lo src/src_libmega_la-gfx.lo \
	src/src_libmega_la-http.lo src/src_libmega_la-json.lo \
	src/src_libmega_la-mediafileattribute.lo \
	src/src_libmega_la-node.lo src/src_libmega_la-pubkeyaction.lo \
	src/src_libmega_la-request.lo \
	src/src_libmega_la-serialize64.lo src/src_libmega_la-share.lo \
	src/src_libmega_la-sharenodekeys.lo src/src_libmega_la-sync.lo \
	src/src_libmega_la-transfer.lo \
	src/src_libmega_la-transferslot.lo \
	src/src_libmega_la-treeproc.lo src/src_libmega_la-user.lo \
	src/src_libmega_la-utils.lo src/src_libmega_la-logging.lo \
	src/src_libmega_la-waiterbase.lo src/src_libmega_la-proxy.lo \
	src/crypto/src_libmega_la-cryptopp.lo \
	src/db/src_libmega_la-sqlite.lo \
	src/src_libmega_la-mega_utf8proc.lo \
	src/gfx/src_libmega_la-external.lo \
	src/src_libmega_la-pendingcontactrequest.lo \
	src/src_libmega_la-mega_zxcvbn.lo $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11)
src_libmega_la_OBJECTS = $(am_src_libmega_la_OBJECTS)
src_libmega_la_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(OBJCXXLD) \
	$(src_libmega_la_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(src_libmega_la_LDFLAGS) $(LDFLAGS) -o $@
#am__EXEEXT_1 =  \
#	examples/linux/megafuse$(EXEEXT)
am__EXEEXT_2 = examples/megacli$(EXEEXT) \
	examples/megasimplesync$(EXEEXT) $(am__EXEEXT_1)
am__EXEEXT_3 = $(am__EXEEXT_2)
am__EXEEXT_4 = tests/misc_test$(EXEEXT) tests/sdk_test$(EXEEXT) \
	tests/purge_account$(EXEEXT)
#am__EXEEXT_5 = $(am__EXEEXT_4)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__examples_linux_megafuse_SOURCES_DIST =  \
	examples/linux/megafuse.cpp
#am_examples_linux_megafuse_OBJECTS = examples/linux/examples_linux_megafuse-megafuse.$(OBJEXT)
examples_linux_megafuse_OBJECTS =  \
	$(am_examples_linux_megafuse_OBJECTS)
#examples_linux_megafuse_DEPENDENCIES = $(top_builddir)/src/libmega.la \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
examples_linux_megafuse_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(examples_linux_megafuse_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_examples_megacli_OBJECTS =  \
	examples/examples_megacli-megacli.$(OBJEXT)
examples_megacli_OBJECTS = $(am_examples_megacli_OBJECTS)
examples_megacli_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmega.la
#examples_megacli_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(top_builddir)/src/libmega.la \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
examples_megacli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(examples_megacli_CXXFLAGS) $(CXXFLAGS) \
	$(examples_megacli_LDFLAGS) $(LDFLAGS) -o $@
am_examples_megasimplesync_OBJECTS =  \
	examples/examples_megasimplesync-megasimplesync.$(OBJEXT)
examples_megasimplesync_OBJECTS =  \
	$(am_examples_megasimplesync_OBJECTS)
examples_megasimplesync_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmega.la
#examples_megasimplesync_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(top_builddir)/src/libmega.la \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
examples_megasimplesync_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(examples_megasimplesync_CXXFLAGS) $(CXXFLAGS) \
	$(examples_megasimplesync_LDFLAGS) $(LDFLAGS) -o $@
am_tests_misc_test_OBJECTS = tests/tests_misc_test-tests.$(OBJEXT) \
	tests/tests_misc_test-paycrypt_test.$(OBJEXT) \
	tests/tests_misc_test-crypto_test.$(OBJEXT)
tests_misc_test_OBJECTS = $(am_tests_misc_test_OBJECTS)
tests_misc_test_DEPENDENCIES = $(GTEST_DIR)/lib/libgtest.la \
	$(GTEST_DIR)/lib/libgtest_main.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmega.la
tests_misc_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tests_misc_test_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tests_purge_account_OBJECTS =  \
	tests/tests_purge_account-purge_account.$(OBJEXT)
tests_purge_account_OBJECTS = $(am_tests_purge_account_OBJECTS)
tests_purge_account_DEPENDENCIES = $(top_builddir)/src/libmega.la
tests_purge_account_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tests_purge_account_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_tests_sdk_test_OBJECTS = tests/tests_sdk_test-sdktests.$(OBJEXT) \
	tests/tests_sdk_test-sdk_test.$(OBJEXT)
tests_sdk_test_OBJECTS = $(am_tests_sdk_test_OBJECTS)
tests_sdk_test_DEPENDENCIES = $(GTEST_DIR)/lib/libgtest.la \
	$(GTEST_DIR)/lib/libgtest_main.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libmega.la
tests_sdk_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include/mega
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
LTOBJCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
SOURCES = $(bindings_java_libmegajava_la_SOURCES) \
	$(nodist_bindings_java_libmegajava_la_SOURCES) \
	$(bindings_php_libmegaphp_la_SOURCES) \
	$(nodist_bindings_php_libmegaphp_la_SOURCES) \
	$(bindings_python__mega_la_SOURCES) \
	$(nodist_bindings_python__mega_la_SOURCES) \
	$(src_libmega_la_SOURCES) $(examples_linux_megafuse_SOURCES) \
	$(examples_megacli_SOURCES) $(examples_megasimplesync_SOURCES) \
	$(tests_misc_test_SOURCES) $(tests_purge_account_SOURCES) \
	$(tests_sdk_test_SOURCES)
DIST_SOURCES = $(am__bindings_java_libmegajava_la_SOURCES_DIST) \
	$(am__bindings_php_libmegaphp_la_SOURCES_DIST) \
	$(am__bindings_python__mega_la_SOURCES_DIST) \
	$(am__src_libmega_la_SOURCES_DIST) \
	$(am__examples_linux_megafuse_SOURCES_DIST) \
	$(examples_megacli_SOURCES) $(examples_megasimplesync_SOURCES) \
	$(tests_misc_test_SOURCES) $(tests_purge_account_SOURCES) \
	$(tests_sdk_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__dist_noinst_PYTHON_DIST = bindings/python/test_libmega.py
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__pkgpython_PYTHON_DIST = bindings/python/mega.py
py_compile = $(top_srcdir)/py-compile
DATA = $(pkgconfig_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/bindings/java/include.am \
	$(srcdir)/bindings/php/include.am \
	$(srcdir)/bindings/python/include.am \
	$(srcdir)/examples/include.am $(srcdir)/libmega.pc.in \
	$(srcdir)/m4/aminclude.am $(srcdir)/src/include.am \
	$(srcdir)/tests/include.am $(top_srcdir)/doc/Doxyfile.in \
	$(top_srcdir)/include/mega/config.h.in compile config.guess \
	config.sub depcomp install-sh ltmain.sh missing py-compile \
	test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /projects/misc/sdk/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CXXFLAGS = 
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /projects/misc/sdk/missing autoconf
AUTOHEADER = ${SHELL} /projects/misc/sdk/missing autoheader
AUTOMAKE = ${SHELL} /projects/misc/sdk/missing automake-1.15
AWK = mawk
AX_SWIG_PYTHON_CPPFLAGS = 
AX_SWIG_PYTHON_OPT = 
CARES_FLAGS = 
CARES_LDFLAGS = 
CARES_LIBS = -lcares
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CRYPTO_CPPFLAGS = 
CRYPTO_CXXFLAGS = 
CRYPTO_LDFLAGS = 
CRYPTO_LIBS = -lcryptopp
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DNDEBUG=1 -fPIC
CYGPATH_W = echo
DB_CPPFLAGS = 
DB_CXXFLAGS = 
DB_LDFLAGS = 
DB_LIBS = -lsqlite3
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = doc/Doxyfile
DX_DOCDIR = doc/api
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='libmega' DOCDIR='doc/api' VERSION='3.3.0' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = libmega
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_STATIC = 
EXEEXT = 
FGREP = /bin/grep -F
FI_CPPFLAGS = 
FI_CXXFLAGS = 
FI_LDFLAGS = 
FI_LIBS = -lfreeimage
FUSE_CXXFLAGS = 
FUSE_LDFLAGS = 
FUSE_LIBS = 
GREP = /bin/grep
GTEST_DIR = 
HAVE_CPPCHECK = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAR = yes
JAVA = yes
JAVAC = yes
JAVA_INCLUDE_DIR = /usr/lib/jvm/java-8-openjdk-amd64/include
JAVA_INCLUDE_DIR_LINUX = /usr/lib/jvm/java-8-openjdk-amd64/include/linux
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -pthread -lrt 
LIBCURL_FLAGS = 
LIBCURL_LIBS = -lcurl
LIBMEDIAINFO_CPPFLAGS = 
LIBMEDIAINFO_CXXFLAGS = 
LIBMEDIAINFO_LDFLAGS = 
LIBMEDIAINFO_LIBS = 
LIBOBJS = 
LIBS = 
LIBSSL_FLAGS = 
LIBSSL_LDFLAGS = 
LIBSSL_LIBS = -lssl -lcrypto
LIBS_EXTRA = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUV_CPPFLAGS = 
LIBUV_CXXFLAGS = 
LIBUV_LDFLAGS = 
LIBUV_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 0
LT_CURRENT = 30300
LT_REVISION = 0
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /projects/misc/sdk/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJCXX = g++
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libmega
PACKAGE_BUGREPORT = https://github.com/meganz/sdk
PACKAGE_NAME = libmega
PACKAGE_STRING = libmega 3.3.0
PACKAGE_TARNAME = libmega
PACKAGE_URL = 
PACKAGE_VERSION = 3.3.0
PATH_SEPARATOR = :
PCRE_CPPFLAGS = 
PCRE_CXXFLAGS = 
PCRE_LDFLAGS = 
PCRE_LIBS = 
PHPCONFIG = 
PHPEXT = 
PHPINC = 
PHPLIBDIR = 
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
RL_CXXFLAGS = 
RL_LDFLAGS = 
RL_LIBS = -lreadline
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SODIUM_CPPFLAGS = 
SODIUM_CXXFLAGS = 
SODIUM_LDFLAGS = 
SODIUM_LIBS = -lsodium
STRIP = strip
SWIG = /usr/bin/swig -c++
SWIG_FLAGS = 
SWIG_FLAGS_PHP = 
SWIG_LIB = /usr/share/swig3.0
TERMCAP_CPPFLAGS = 
TERMCAP_CXXFLAGS = 
TERMCAP_LDFLAGS = 
TERMCAP_LIBS = -ltermcap
USE_FUSE = 0
VERSION = 3.3.0
WINHTTP_CPPFLAGS = 
WINHTTP_CXXFLAGS = 
WINHTTP_LDFLAGS = 
WINHTTP_LIBS = 
ZLIB_CPPFLAGS = 
ZLIB_CXXFLAGS = 
ZLIB_LDFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /projects/misc/sdk
abs_srcdir = /projects/misc/sdk
abs_top_builddir = /projects/misc/sdk
abs_top_srcdir = /projects/misc/sdk
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /projects/misc/sdk/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
platform_include = mega/posix
prefix = /
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
AUTOMAKE_OPTIONS = foreign 1.9 subdir-objects
ACLOCAL_AMFLAGS = -I m4
AM_CPPFLAGS = -I$(top_srcdir)/include \
	-I$(top_srcdir)/third_party/utf8proc $(am__append_1) \
	$(am__append_2) $(am__append_3)
##DX_CLEAN_HTML = doc/api/html
##DX_CLEAN_CHM = doc/api/chm
###DX_CLEAN_CHI = doc/api/libmega.chi
##DX_CLEAN_MAN = doc/api/man
##DX_CLEAN_RTF = doc/api/rtf
##DX_CLEAN_XML = doc/api/xml
##DX_CLEAN_PS = doc/api/libmega.ps
##DX_PS_GOAL = doxygen-ps
##DX_CLEAN_PDF = doc/api/libmega.pdf
##DX_PDF_GOAL = doxygen-pdf
##DX_CLEAN_LATEX = doc/api/latex
#DX_CLEANFILES = \
#	doc/api/libmega.tag \
#	-r \
#	$(DX_CLEAN_HTML) \
#	$(DX_CLEAN_CHM) \
#	$(DX_CLEAN_CHI) \
#	$(DX_CLEAN_MAN) \
#	$(DX_CLEAN_RTF) \
#	$(DX_CLEAN_XML) \
#	$(DX_CLEAN_PS) \
#	$(DX_CLEAN_PDF) \
#	$(DX_CLEAN_LATEX)

#AM_LIBTOOLFLAGS = "--tag=CXX"
#AM_LIBTOOLFLAGS = "--tag=CXX"
VERSION_INFO = $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)
CLEANFILES = $(am__append_21) $(am__append_22) $(am__append_23)
DISTCLEANFILES = *~ libmega.pc
BUILT_SOURCES = 

# library
lib_LTLIBRARIES = src/libmega.la
src_libmega_la_CXXFLAGS = $(CARES_FLAGS) $(LIBCURL_FLAGS) $(ZLIB_CXXFLAGS) $(LIBUV_CXXFLAGS) $(LIBMEDIAINFO_CXXFLAGS) $(CRYPTO_CXXFLAGS) $(SODIUM_CXXFLAGS) $(DB_CXXFLAGS) $(FI_CXXFLAGS) $(LIBSSL_FLAGS) $(PCRE_CXXFLAGS)

# CXX flags
#src_libmega_la_CXXFLAGS = -D_WIN32=1 -Iinclude/ -Iinclude/mega/win32 $(LIBS_EXTRA) $(ZLIB_CXXFLAGS) $(LIBUV_CXXFLAGS) $(LIBMEDIAINFO_CXXFLAGS) $(CRYPTO_CXXFLAGS) $(SODIUM_CXXFLAGS) $(DB_CXXFLAGS) $(CXXFLAGS) $(WINHTTP_CXXFLAGS) $(FI_CXXFLAGS) $(PCRE_CXXFLAGS)
src_libmega_la_LIBADD = $(CARES_LDFLAGS) $(CARES_LIBS) $(LIBCURL_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS) $(LIBUV_LDFLAGS) $(LIBUV_LIBS) $(LIBMEDIAINFO_LDFLAGS) $(LIBMEDIAINFO_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(SODIUM_LDFLAGS) $(SODIUM_LIBS) $(DB_LDFLAGS) $(DB_LIBS) $(FI_LDFLAGS) $(FI_LIBS) $(LIBSSL_LDFLAGS) $(LIBSSL_LIBS) $(PCRE_LDFLAGS) $(PCRE_LIBS)

# Libs
#src_libmega_la_LIBADD = $(LIBS_EXTRA) $(ZLIB_LDFLAGS) $(ZLIB_LIBS) $(LIBUV_LDFLAGS) $(LIBUV_LIBS) $(LIBMEDIAINFO_LDFLAGS) $(LIBMEDIAINFO_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(SODIUM_LDFLAGS) $(SODIUM_LIBS) $(DB_LDFLAGS) $(DB_LIBS) $(WINHTTP_LDFLAGS) $(WINHTTP_LIBS) $(FI_LDFLAGS) $(FI_LIBS) $(PCRE_LDFLAGS) $(PCRE_LIBS)

# add library version
src_libmega_la_LDFLAGS = -version-info $(VERSION_INFO) $(am__append_4) \
	$(am__append_11)

# common sources
src_libmega_la_SOURCES = src/megaclient.cpp src/attrmap.cpp \
	src/backofftimer.cpp src/base64.cpp src/command.cpp \
	src/commands.cpp src/db.cpp src/fileattributefetch.cpp \
	src/file.cpp src/filefingerprint.cpp src/filesystem.cpp \
	src/gfx.cpp src/http.cpp src/json.cpp \
	src/mediafileattribute.cpp src/node.cpp src/pubkeyaction.cpp \
	src/request.cpp src/serialize64.cpp src/share.cpp \
	src/sharenodekeys.cpp src/sync.cpp src/transfer.cpp \
	src/transferslot.cpp src/treeproc.cpp src/user.cpp \
	src/utils.cpp src/logging.cpp src/waiterbase.cpp src/proxy.cpp \
	src/crypto/cryptopp.cpp src/db/sqlite.cpp \
	src/mega_utf8proc.cpp src/gfx/external.cpp \
	src/pendingcontactrequest.cpp src/mega_zxcvbn.cpp \
	$(am__append_5) $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_12) $(am__append_13) $(am__append_14) \
	$(am__append_15) $(am__append_16)
EXTRA_DIST = src/mega_utf8proc_data.c autogen.sh libmega.pc.in \
	$(DX_CONFIG) m4/ax_prog_doxygen.m4 m4/aminclude.am
# MacOS specific
#src_libmega_la_OBJCXXFLAGS = $(src_libmega_la_CXXFLAGS)

# applications
EXAMPLES = examples/megacli examples/megasimplesync $(am__append_17)

# rules
examples_megacli_SOURCES = examples/megacli.cpp
examples_megaclidir = examples
noinst_HEADERS = examples/megacli.h
examples_megasimplesync_SOURCES = examples/megasimplesync.cpp
examples_megacli_CXXFLAGS = $(FI_CXXFLAGS) $(RL_CXXFLAGS) \
	$(ZLIB_CXXFLAGS) $(CARES_FLAGS) $(LIBCURL_FLAGS) \
	$(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) \
	$(SODIUM_CXXFLAGS) $(LIBSSL_FLAGS) \
	$(PCRE_CXXFLAGS) $(am__append_19)
#examples_megacli_CXXFLAGS = -D_WIN32=1 -Iinclude/ \
#	-Iinclude/mega/win32 $(FI_CXXFLAGS) $(RL_CXXFLAGS) \
#	$(ZLIB_CXXFLAGS) $(LIBUV_CXXFLAGS) \
#	$(LIBMEDIAINFO_CXXFLAGS) $(LIBCURL_FLAGS) \
#	$(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) \
#	$(WINHTTP_CXXFLAGS) $(SODIUM_CXXFLAGS) \
#	$(PCRE_CXXFLAGS) $(am__append_19)
examples_megacli_LDADD = $(FI_LDFLAGS) $(FI_LIBS) $(RL_LDFLAGS) $(RL_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS) $(LIBUV_LDFLAGS) $(LIBUV_LIBS) $(LIBMEDIAINFO_LDFLAGS) $(LIBMEDIAINFO_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(CARES_LDFLAGS) $(CARES_LIBS) $(LIBCURL_LIBS) $(DB_LDFLAGS) $(DB_LIBS) $(LIBSSL_LDFLAGS) $(LIBSSL_LIBS) $(TERMCAP_LDFLAGS) $(TERMCAP_LIBS) $(PCRE_LDFLAGS) $(PCRE_LIBS) $(top_builddir)/src/libmega.la
#examples_megacli_LDADD = $(FI_LDFLAGS) $(FI_LIBS) $(RL_LDFLAGS) $(RL_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS)  $(LIBUV_LDFLAGS) $(LIBUV_LIBS) $(LIBMEDIAINFO_LDFLAGS) $(LIBMEDIAINFO_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(DB_LDFLAGS) $(DB_LIBS) $(WINHTTP_LDFLAGS) $(WINHTTP_LIBS) $(TERMCAP_LDFLAGS) $(TERMCAP_LIBS) $(top_builddir)/src/libmega.la $(LIBS_EXTRA) $(PCRE_LDFLAGS) $(PCRE_LIBS)
examples_megasimplesync_CXXFLAGS = $(FI_CXXFLAGS) $(ZLIB_CXXFLAGS) $(LIBUV_CXXFLAGS) $(LIBMEDIAINFO_CXXFLAGS) $(CARES_FLAGS) $(LIBCURL_FLAGS) $(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) $(SODIUM_CXXFLAGS) $(LIBSSL_FLAGS) $(PCRE_CXXFLAGS)
#examples_megasimplesync_CXXFLAGS = -D_WIN32=1 -Iinclude/ -Iinclude/mega/win32 $(FI_CXXFLAGS) $(ZLIB_CXXFLAGS) $(LIBUV_CXXFLAGS) $(LIBMEDIAINFO_CXXFLAGS) $(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) $(WINHTTP_CXXFLAGS) $(SODIUM_CXXFLAGS) $(PCRE_CXXFLAGS)
examples_megasimplesync_LDADD = $(FI_LDFLAGS) $(FI_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS) $(LIBUV_LDFLAGS) $(LIBUV_LIBS) $(LIBMEDIAINFO_LDFLAGS) $(LIBMEDIAINFO_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(CARES_LDFLAGS) $(CARES_LIBS) $(LIBCURL_LIBS) $(DB_LDFLAGS) $(DB_LIBS) $(LIBSSL_LDFLAGS) $(LIBSSL_LIBS) $(PCRE_LDFLAGS) $(PCRE_LIBS) $(top_builddir)/src/libmega.la
#examples_megasimplesync_LDADD = $(FI_LDFLAGS) $(FI_LIBS) $(ZLIB_LDFLAGS) $(ZLIB_LIBS) $(LIBUV_LDFLAGS) $(LIBUV_LIBS) $(LIBMEDIAINFO_LDFLAGS) $(LIBMEDIAINFO_LIBS) $(CRYPTO_LDFLAGS) $(CRYPTO_LIBS) $(DB_LDFLAGS) $(DB_LIBS) $(WINHTTP_LDFLAGS) $(WINHTTP_LIBS)  $(top_builddir)/src/libmega.la $(LIBS_EXTRA) $(PCRE_LDFLAGS) $(PCRE_LIBS)
#examples_linux_megafuse_SOURCES = examples/linux/megafuse.cpp
#examples_linux_megafuse_CXXFLAGS = $(FUSE_CXXFLAGS)
#examples_linux_megafuse_LDADD = $(top_builddir)/src/libmega.la $(FUSE_LDFLAGS) $(FUSE_LIBS)
#examples_megacli_LDFLAGS = -Wl,-static -all-static
#examples_megasimplesync_LDFLAGS = -Wl,-static -all-static

# rules
tests_misc_test_SOURCES = \
    tests/tests.cpp \
    tests/paycrypt_test.cpp \
    tests/crypto_test.cpp

tests_sdk_test_SOURCES = \
    tests/sdktests.cpp \
    tests/sdk_test.cpp

tests_purge_account_SOURCES = \
    tests/purge_account.cpp

tests_misc_test_CXXFLAGS = -I$(GTEST_DIR)/include $(FI_CXXFLAGS) $(RL_CXXFLAGS) $(ZLIB_CXXFLAGS) $(CARES_FLAGS) $(LIBCURL_FLAGS) $(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) $(SODIUM_CXXFLAGS) $(LIBSSL_FLAGS)
tests_misc_test_LDADD = $(GTEST_DIR)/lib/libgtest.la $(GTEST_DIR)/lib/libgtest_main.la $(CRYPTO_LIBS) $(SODIUM_LDFLAGS) $(SODIUM_LIBS) $(top_builddir)/src/libmega.la
tests_sdk_test_CXXFLAGS = -I$(GTEST_DIR)/include -I$(top_builddir)/include $(FI_CXXFLAGS) $(RL_CXXFLAGS) $(ZLIB_CXXFLAGS) $(CARES_FLAGS) $(LIBCURL_FLAGS) $(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) $(SODIUM_CXXFLAGS) $(LIBSSL_FLAGS)
tests_sdk_test_LDADD = $(GTEST_DIR)/lib/libgtest.la $(GTEST_DIR)/lib/libgtest_main.la $(CRYPTO_LIBS) $(SODIUM_LDFLAGS) $(SODIUM_LIBS) $(top_builddir)/src/libmega.la
tests_purge_account_CXXFLAGS = -I$(top_builddir)/include $(FI_CXXFLAGS) $(RL_CXXFLAGS) $(ZLIB_CXXFLAGS) $(CARES_FLAGS) $(LIBCURL_FLAGS) $(CRYPTO_CXXFLAGS) $(DB_CXXFLAGS) $(SODIUM_CXXFLAGS) $(LIBSSL_FLAGS)
tests_purge_account_LDADD = $(top_builddir)/src/libmega.la
#pkgpython_PYTHON = bindings/python/mega.py
#nodist_pkgpython_PYTHON = bindings/python/__init__.py
#pkgpyexec_LTLIBRARIES = bindings/python/_mega.la
#dist_noinst_PYTHON = bindings/python/test_libmega.py
#nodist_bindings_python__mega_la_SOURCES = bindings/python/megaapi_wrap.cpp
#bindings_python__mega_la_SOURCES = $(top_srcdir)/bindings/megaapi.i
#bindings_python__mega_la_CPPFLAGS = $(PYTHON_CPPFLAGS) -I$(top_srcdir)/include
#bindings_python__mega_la_LDFLAGS = -module $(PYTHON_LDFLAGS) $(PYTHON_EXTRA_LDFLAGS)
#bindings_python__mega_la_LIBADD = $(top_builddir)/src/libmega.la $(PYTHON_EXTRA_LDFLAGS)
#php_LTLIBRARIES = bindings/php/libmegaphp.la
#phpdir = 
#bindings_php_libmegaphp_la_LIBADD = $(top_builddir)/src/libmega.la
#bindings_php_libmegaphp_la_DEPENDENCIES = $(top_builddir)/src/libmega.la
#bindings_php_libmegaphp_la_CPPFLAGS =  -I$(top_srcdir)/include
#bindings_php_libmegaphp_la_LDFLAGS = -shared -shrext .so
#nodist_bindings_php_libmegaphp_la_SOURCES = bindings/php/megaapi_wrap.cpp
#bindings_php_libmegaphp_la_SOURCES = $(top_srcdir)/bindings/megaapi.i
pkglib_LTLIBRARIES = bindings/java/libmegajava.la
bindings_java_libmegajava_la_LIBADD = $(top_builddir)/src/libmega.la
bindings_java_libmegajava_la_DEPENDENCIES = $(top_builddir)/src/libmega.la
bindings_java_libmegajava_la_CPPFLAGS = -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux -I$(top_srcdir)/include
nodist_bindings_java_libmegajava_la_SOURCES = bindings/java/megaapi_wrap.cpp
bindings_java_libmegajava_la_SOURCES = $(top_srcdir)/bindings/megaapi.i
SUBDIRS = include
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libmega.pc
platform_includes = $(top_srcdir)/include/mega/posix
#platform_includes = $(top_srcdir)/include/mega/win32
CPPCHECK_CMD = cppcheck \
	--template='{file};{line};{severity};{id};{message}' \
	--enable=warning,portability,information,missingInclude \
	--std=c++03 --force \
	--quiet \
	-I $(top_srcdir)/include \
	-I $(platform_includes)

CPPCHECK_DIRS = \
	"$(top_srcdir)/src" \
    "$(top_srcdir)/examples"

MOSTLYCLEANFILES = $(DX_CLEANFILES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .mm .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/m4/aminclude.am $(srcdir)/src/include.am $(srcdir)/examples/include.am $(srcdir)/tests/include.am $(srcdir)/bindings/python/include.am $(srcdir)/bindings/php/include.am $(srcdir)/bindings/java/include.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/m4/aminclude.am $(srcdir)/src/include.am $(srcdir)/examples/include.am $(srcdir)/tests/include.am $(srcdir)/bindings/python/include.am $(srcdir)/bindings/php/include.am $(srcdir)/bindings/java/include.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

include/mega/config.h: include/mega/stamp-h1
	@test -f $@ || rm -f include/mega/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) include/mega/stamp-h1

include/mega/stamp-h1: $(top_srcdir)/include/mega/config.h.in $(top_builddir)/config.status
	@rm -f include/mega/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status include/mega/config.h
$(top_srcdir)/include/mega/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f include/mega/stamp-h1
	touch $@

distclean-hdr:
	-rm -f include/mega/config.h include/mega/stamp-h1
libmega.pc: $(top_builddir)/config.status $(srcdir)/libmega.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/Doxyfile: $(top_builddir)/config.status $(top_srcdir)/doc/Doxyfile.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-phpLTLIBRARIES: $(php_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(php_LTLIBRARIES)'; test -n "$(phpdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(phpdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(phpdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(phpdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(phpdir)"; \
	}

uninstall-phpLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(php_LTLIBRARIES)'; test -n "$(phpdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(phpdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(phpdir)/$$f"; \
	done

clean-phpLTLIBRARIES:
	-test -z "$(php_LTLIBRARIES)" || rm -f $(php_LTLIBRARIES)
	@list='$(php_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pkgpyexecLTLIBRARIES: $(pkgpyexec_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkgpyexec_LTLIBRARIES)'; test -n "$(pkgpyexecdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgpyexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgpyexecdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkgpyexecdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkgpyexecdir)"; \
	}

uninstall-pkgpyexecLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgpyexec_LTLIBRARIES)'; test -n "$(pkgpyexecdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkgpyexecdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkgpyexecdir)/$$f"; \
	done

clean-pkgpyexecLTLIBRARIES:
	-test -z "$(pkgpyexec_LTLIBRARIES)" || rm -f $(pkgpyexec_LTLIBRARIES)
	@list='$(pkgpyexec_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
bindings/java/$(am__dirstamp):
	@$(MKDIR_P) bindings/java
	@: > bindings/java/$(am__dirstamp)
bindings/java/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bindings/java/$(DEPDIR)
	@: > bindings/java/$(DEPDIR)/$(am__dirstamp)
bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo:  \
	bindings/java/$(am__dirstamp) \
	bindings/java/$(DEPDIR)/$(am__dirstamp)

bindings/java/libmegajava.la: $(bindings_java_libmegajava_la_OBJECTS) $(bindings_java_libmegajava_la_DEPENDENCIES) $(EXTRA_bindings_java_libmegajava_la_DEPENDENCIES) bindings/java/$(am__dirstamp)
	$(AM_V_CXXLD)$(CXXLINK) $(am_bindings_java_libmegajava_la_rpath) $(bindings_java_libmegajava_la_OBJECTS) $(bindings_java_libmegajava_la_LIBADD) $(LIBS)
bindings/php/$(am__dirstamp):
	@$(MKDIR_P) bindings/php
	@: > bindings/php/$(am__dirstamp)
bindings/php/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bindings/php/$(DEPDIR)
	@: > bindings/php/$(DEPDIR)/$(am__dirstamp)
bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo:  \
	bindings/php/$(am__dirstamp) \
	bindings/php/$(DEPDIR)/$(am__dirstamp)

bindings/php/libmegaphp.la: $(bindings_php_libmegaphp_la_OBJECTS) $(bindings_php_libmegaphp_la_DEPENDENCIES) $(EXTRA_bindings_php_libmegaphp_la_DEPENDENCIES) bindings/php/$(am__dirstamp)
	$(AM_V_CXXLD)$(bindings_php_libmegaphp_la_LINK) $(am_bindings_php_libmegaphp_la_rpath) $(bindings_php_libmegaphp_la_OBJECTS) $(bindings_php_libmegaphp_la_LIBADD) $(LIBS)
bindings/python/$(am__dirstamp):
	@$(MKDIR_P) bindings/python
	@: > bindings/python/$(am__dirstamp)
bindings/python/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bindings/python/$(DEPDIR)
	@: > bindings/python/$(DEPDIR)/$(am__dirstamp)
bindings/python/bindings_python__mega_la-megaapi_wrap.lo:  \
	bindings/python/$(am__dirstamp) \
	bindings/python/$(DEPDIR)/$(am__dirstamp)

bindings/python/_mega.la: $(bindings_python__mega_la_OBJECTS) $(bindings_python__mega_la_DEPENDENCIES) $(EXTRA_bindings_python__mega_la_DEPENDENCIES) bindings/python/$(am__dirstamp)
	$(AM_V_CXXLD)$(bindings_python__mega_la_LINK) $(am_bindings_python__mega_la_rpath) $(bindings_python__mega_la_OBJECTS) $(bindings_python__mega_la_LIBADD) $(LIBS)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-megaclient.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-attrmap.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-backofftimer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-base64.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-command.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-commands.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-db.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-fileattributefetch.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-file.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-filefingerprint.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-filesystem.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-gfx.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-http.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-json.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-mediafileattribute.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-node.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-pubkeyaction.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-request.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-serialize64.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-share.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-sharenodekeys.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-sync.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-transfer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-transferslot.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-treeproc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-user.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-utils.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-logging.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-waiterbase.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-proxy.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/crypto/$(am__dirstamp):
	@$(MKDIR_P) src/crypto
	@: > src/crypto/$(am__dirstamp)
src/crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/crypto/$(DEPDIR)
	@: > src/crypto/$(DEPDIR)/$(am__dirstamp)
src/crypto/src_libmega_la-cryptopp.lo: src/crypto/$(am__dirstamp) \
	src/crypto/$(DEPDIR)/$(am__dirstamp)
src/db/$(am__dirstamp):
	@$(MKDIR_P) src/db
	@: > src/db/$(am__dirstamp)
src/db/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/db/$(DEPDIR)
	@: > src/db/$(DEPDIR)/$(am__dirstamp)
src/db/src_libmega_la-sqlite.lo: src/db/$(am__dirstamp) \
	src/db/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-mega_utf8proc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/gfx/$(am__dirstamp):
	@$(MKDIR_P) src/gfx
	@: > src/gfx/$(am__dirstamp)
src/gfx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/gfx/$(DEPDIR)
	@: > src/gfx/$(DEPDIR)/$(am__dirstamp)
src/gfx/src_libmega_la-external.lo: src/gfx/$(am__dirstamp) \
	src/gfx/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-pendingcontactrequest.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-mega_zxcvbn.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-megaapi_impl.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-megaapi.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/gfx/src_libmega_la-freeimage.lo: src/gfx/$(am__dirstamp) \
	src/gfx/$(DEPDIR)/$(am__dirstamp)
src/crypto/src_libmega_la-sodium.lo: src/crypto/$(am__dirstamp) \
	src/crypto/$(DEPDIR)/$(am__dirstamp)
src/src_libmega_la-mega_http_parser.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/gfx/src_libmega_la-GfxProcCG.lo: src/gfx/$(am__dirstamp) \
	src/gfx/$(DEPDIR)/$(am__dirstamp)
src/osx/$(am__dirstamp):
	@$(MKDIR_P) src/osx
	@: > src/osx/$(am__dirstamp)
src/osx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/osx/$(DEPDIR)
	@: > src/osx/$(DEPDIR)/$(am__dirstamp)
src/osx/src_libmega_la-osxutils.lo: src/osx/$(am__dirstamp) \
	src/osx/$(DEPDIR)/$(am__dirstamp)
src/win32/$(am__dirstamp):
	@$(MKDIR_P) src/win32
	@: > src/win32/$(am__dirstamp)
src/win32/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/win32/$(DEPDIR)
	@: > src/win32/$(DEPDIR)/$(am__dirstamp)
src/win32/src_libmega_la-fs.lo: src/win32/$(am__dirstamp) \
	src/win32/$(DEPDIR)/$(am__dirstamp)
src/win32/src_libmega_la-console.lo: src/win32/$(am__dirstamp) \
	src/win32/$(DEPDIR)/$(am__dirstamp)
src/win32/src_libmega_la-net.lo: src/win32/$(am__dirstamp) \
	src/win32/$(DEPDIR)/$(am__dirstamp)
src/win32/src_libmega_la-waiter.lo: src/win32/$(am__dirstamp) \
	src/win32/$(DEPDIR)/$(am__dirstamp)
src/win32/src_libmega_la-consolewaiter.lo: src/win32/$(am__dirstamp) \
	src/win32/$(DEPDIR)/$(am__dirstamp)
src/thread/$(am__dirstamp):
	@$(MKDIR_P) src/thread
	@: > src/thread/$(am__dirstamp)
src/thread/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/thread/$(DEPDIR)
	@: > src/thread/$(DEPDIR)/$(am__dirstamp)
src/thread/src_libmega_la-posixthread.lo: src/thread/$(am__dirstamp) \
	src/thread/$(DEPDIR)/$(am__dirstamp)
src/thread/src_libmega_la-win32thread.lo: src/thread/$(am__dirstamp) \
	src/thread/$(DEPDIR)/$(am__dirstamp)
src/posix/$(am__dirstamp):
	@$(MKDIR_P) src/posix
	@: > src/posix/$(am__dirstamp)
src/posix/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/posix/$(DEPDIR)
	@: > src/posix/$(DEPDIR)/$(am__dirstamp)
src/posix/src_libmega_la-fs.lo: src/posix/$(am__dirstamp) \
	src/posix/$(DEPDIR)/$(am__dirstamp)
src/posix/src_libmega_la-console.lo: src/posix/$(am__dirstamp) \
	src/posix/$(DEPDIR)/$(am__dirstamp)
src/posix/src_libmega_la-net.lo: src/posix/$(am__dirstamp) \
	src/posix/$(DEPDIR)/$(am__dirstamp)
src/posix/src_libmega_la-waiter.lo: src/posix/$(am__dirstamp) \
	src/posix/$(DEPDIR)/$(am__dirstamp)
src/posix/src_libmega_la-consolewaiter.lo: src/posix/$(am__dirstamp) \
	src/posix/$(DEPDIR)/$(am__dirstamp)
src/mega_glob.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

src/libmega.la: $(src_libmega_la_OBJECTS) $(src_libmega_la_DEPENDENCIES) $(EXTRA_src_libmega_la_DEPENDENCIES) src/$(am__dirstamp)
	$(AM_V_OBJCXXLD)$(src_libmega_la_LINK) -rpath $(libdir) $(src_libmega_la_OBJECTS) $(src_libmega_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
examples/linux/$(am__dirstamp):
	@$(MKDIR_P) examples/linux
	@: > examples/linux/$(am__dirstamp)
examples/linux/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/linux/$(DEPDIR)
	@: > examples/linux/$(DEPDIR)/$(am__dirstamp)
examples/linux/examples_linux_megafuse-megafuse.$(OBJEXT):  \
	examples/linux/$(am__dirstamp) \
	examples/linux/$(DEPDIR)/$(am__dirstamp)

examples/linux/megafuse$(EXEEXT): $(examples_linux_megafuse_OBJECTS) $(examples_linux_megafuse_DEPENDENCIES) $(EXTRA_examples_linux_megafuse_DEPENDENCIES) examples/linux/$(am__dirstamp)
	@rm -f examples/linux/megafuse$(EXEEXT)
	$(AM_V_CXXLD)$(examples_linux_megafuse_LINK) $(examples_linux_megafuse_OBJECTS) $(examples_linux_megafuse_LDADD) $(LIBS)
examples/$(am__dirstamp):
	@$(MKDIR_P) examples
	@: > examples/$(am__dirstamp)
examples/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/$(DEPDIR)
	@: > examples/$(DEPDIR)/$(am__dirstamp)
examples/examples_megacli-megacli.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

examples/megacli$(EXEEXT): $(examples_megacli_OBJECTS) $(examples_megacli_DEPENDENCIES) $(EXTRA_examples_megacli_DEPENDENCIES) examples/$(am__dirstamp)
	@rm -f examples/megacli$(EXEEXT)
	$(AM_V_CXXLD)$(examples_megacli_LINK) $(examples_megacli_OBJECTS) $(examples_megacli_LDADD) $(LIBS)
examples/examples_megasimplesync-megasimplesync.$(OBJEXT):  \
	examples/$(am__dirstamp) examples/$(DEPDIR)/$(am__dirstamp)

examples/megasimplesync$(EXEEXT): $(examples_megasimplesync_OBJECTS) $(examples_megasimplesync_DEPENDENCIES) $(EXTRA_examples_megasimplesync_DEPENDENCIES) examples/$(am__dirstamp)
	@rm -f examples/megasimplesync$(EXEEXT)
	$(AM_V_CXXLD)$(examples_megasimplesync_LINK) $(examples_megasimplesync_OBJECTS) $(examples_megasimplesync_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_misc_test-tests.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_misc_test-paycrypt_test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_misc_test-crypto_test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/misc_test$(EXEEXT): $(tests_misc_test_OBJECTS) $(tests_misc_test_DEPENDENCIES) $(EXTRA_tests_misc_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/misc_test$(EXEEXT)
	$(AM_V_CXXLD)$(tests_misc_test_LINK) $(tests_misc_test_OBJECTS) $(tests_misc_test_LDADD) $(LIBS)
tests/tests_purge_account-purge_account.$(OBJEXT):  \
	tests/$(am__dirstamp) tests/$(DEPDIR)/$(am__dirstamp)

tests/purge_account$(EXEEXT): $(tests_purge_account_OBJECTS) $(tests_purge_account_DEPENDENCIES) $(EXTRA_tests_purge_account_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/purge_account$(EXEEXT)
	$(AM_V_CXXLD)$(tests_purge_account_LINK) $(tests_purge_account_OBJECTS) $(tests_purge_account_LDADD) $(LIBS)
tests/tests_sdk_test-sdktests.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_sdk_test-sdk_test.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/sdk_test$(EXEEXT): $(tests_sdk_test_OBJECTS) $(tests_sdk_test_DEPENDENCIES) $(EXTRA_tests_sdk_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/sdk_test$(EXEEXT)
	$(AM_V_CXXLD)$(tests_sdk_test_LINK) $(tests_sdk_test_OBJECTS) $(tests_sdk_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bindings/java/*.$(OBJEXT)
	-rm -f bindings/java/*.lo
	-rm -f bindings/php/*.$(OBJEXT)
	-rm -f bindings/php/*.lo
	-rm -f bindings/python/*.$(OBJEXT)
	-rm -f bindings/python/*.lo
	-rm -f examples/*.$(OBJEXT)
	-rm -f examples/linux/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/*.lo
	-rm -f src/crypto/*.$(OBJEXT)
	-rm -f src/crypto/*.lo
	-rm -f src/db/*.$(OBJEXT)
	-rm -f src/db/*.lo
	-rm -f src/gfx/*.$(OBJEXT)
	-rm -f src/gfx/*.lo
	-rm -f src/osx/*.$(OBJEXT)
	-rm -f src/osx/*.lo
	-rm -f src/posix/*.$(OBJEXT)
	-rm -f src/posix/*.lo
	-rm -f src/thread/*.$(OBJEXT)
	-rm -f src/thread/*.lo
	-rm -f src/win32/*.$(OBJEXT)
	-rm -f src/win32/*.lo
	-rm -f tests/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include bindings/java/$(DEPDIR)/bindings_java_libmegajava_la-megaapi_wrap.Plo
include bindings/php/$(DEPDIR)/bindings_php_libmegaphp_la-megaapi_wrap.Plo
include bindings/python/$(DEPDIR)/bindings_python__mega_la-megaapi_wrap.Plo
include examples/$(DEPDIR)/examples_megacli-megacli.Po
include examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Po
include examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Po
include src/$(DEPDIR)/mega_glob.Plo
include src/$(DEPDIR)/src_libmega_la-attrmap.Plo
include src/$(DEPDIR)/src_libmega_la-backofftimer.Plo
include src/$(DEPDIR)/src_libmega_la-base64.Plo
include src/$(DEPDIR)/src_libmega_la-command.Plo
include src/$(DEPDIR)/src_libmega_la-commands.Plo
include src/$(DEPDIR)/src_libmega_la-db.Plo
include src/$(DEPDIR)/src_libmega_la-file.Plo
include src/$(DEPDIR)/src_libmega_la-fileattributefetch.Plo
include src/$(DEPDIR)/src_libmega_la-filefingerprint.Plo
include src/$(DEPDIR)/src_libmega_la-filesystem.Plo
include src/$(DEPDIR)/src_libmega_la-gfx.Plo
include src/$(DEPDIR)/src_libmega_la-http.Plo
include src/$(DEPDIR)/src_libmega_la-json.Plo
include src/$(DEPDIR)/src_libmega_la-logging.Plo
include src/$(DEPDIR)/src_libmega_la-mediafileattribute.Plo
include src/$(DEPDIR)/src_libmega_la-mega_http_parser.Plo
include src/$(DEPDIR)/src_libmega_la-mega_utf8proc.Plo
include src/$(DEPDIR)/src_libmega_la-mega_zxcvbn.Plo
include src/$(DEPDIR)/src_libmega_la-megaapi.Plo
include src/$(DEPDIR)/src_libmega_la-megaapi_impl.Plo
include src/$(DEPDIR)/src_libmega_la-megaclient.Plo
include src/$(DEPDIR)/src_libmega_la-node.Plo
include src/$(DEPDIR)/src_libmega_la-pendingcontactrequest.Plo
include src/$(DEPDIR)/src_libmega_la-proxy.Plo
include src/$(DEPDIR)/src_libmega_la-pubkeyaction.Plo
include src/$(DEPDIR)/src_libmega_la-request.Plo
include src/$(DEPDIR)/src_libmega_la-serialize64.Plo
include src/$(DEPDIR)/src_libmega_la-share.Plo
include src/$(DEPDIR)/src_libmega_la-sharenodekeys.Plo
include src/$(DEPDIR)/src_libmega_la-sync.Plo
include src/$(DEPDIR)/src_libmega_la-transfer.Plo
include src/$(DEPDIR)/src_libmega_la-transferslot.Plo
include src/$(DEPDIR)/src_libmega_la-treeproc.Plo
include src/$(DEPDIR)/src_libmega_la-user.Plo
include src/$(DEPDIR)/src_libmega_la-utils.Plo
include src/$(DEPDIR)/src_libmega_la-waiterbase.Plo
include src/crypto/$(DEPDIR)/src_libmega_la-cryptopp.Plo
include src/crypto/$(DEPDIR)/src_libmega_la-sodium.Plo
include src/db/$(DEPDIR)/src_libmega_la-sqlite.Plo
include src/gfx/$(DEPDIR)/src_libmega_la-GfxProcCG.Plo
include src/gfx/$(DEPDIR)/src_libmega_la-external.Plo
include src/gfx/$(DEPDIR)/src_libmega_la-freeimage.Plo
include src/osx/$(DEPDIR)/src_libmega_la-osxutils.Plo
include src/posix/$(DEPDIR)/src_libmega_la-console.Plo
include src/posix/$(DEPDIR)/src_libmega_la-consolewaiter.Plo
include src/posix/$(DEPDIR)/src_libmega_la-fs.Plo
include src/posix/$(DEPDIR)/src_libmega_la-net.Plo
include src/posix/$(DEPDIR)/src_libmega_la-waiter.Plo
include src/thread/$(DEPDIR)/src_libmega_la-posixthread.Plo
include src/thread/$(DEPDIR)/src_libmega_la-win32thread.Plo
include src/win32/$(DEPDIR)/src_libmega_la-console.Plo
include src/win32/$(DEPDIR)/src_libmega_la-consolewaiter.Plo
include src/win32/$(DEPDIR)/src_libmega_la-fs.Plo
include src/win32/$(DEPDIR)/src_libmega_la-net.Plo
include src/win32/$(DEPDIR)/src_libmega_la-waiter.Plo
include tests/$(DEPDIR)/tests_misc_test-crypto_test.Po
include tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Po
include tests/$(DEPDIR)/tests_misc_test-tests.Po
include tests/$(DEPDIR)/tests_purge_account-purge_account.Po
include tests/$(DEPDIR)/tests_sdk_test-sdk_test.Po
include tests/$(DEPDIR)/tests_sdk_test-sdktests.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo: bindings/java/megaapi_wrap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bindings_java_libmegajava_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo -MD -MP -MF bindings/java/$(DEPDIR)/bindings_java_libmegajava_la-megaapi_wrap.Tpo -c -o bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo `test -f 'bindings/java/megaapi_wrap.cpp' || echo '$(srcdir)/'`bindings/java/megaapi_wrap.cpp
	$(AM_V_at)$(am__mv) bindings/java/$(DEPDIR)/bindings_java_libmegajava_la-megaapi_wrap.Tpo bindings/java/$(DEPDIR)/bindings_java_libmegajava_la-megaapi_wrap.Plo
#	$(AM_V_CXX)source='bindings/java/megaapi_wrap.cpp' object='bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bindings_java_libmegajava_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bindings/java/bindings_java_libmegajava_la-megaapi_wrap.lo `test -f 'bindings/java/megaapi_wrap.cpp' || echo '$(srcdir)/'`bindings/java/megaapi_wrap.cpp

bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo: bindings/php/megaapi_wrap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bindings_php_libmegaphp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo -MD -MP -MF bindings/php/$(DEPDIR)/bindings_php_libmegaphp_la-megaapi_wrap.Tpo -c -o bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo `test -f 'bindings/php/megaapi_wrap.cpp' || echo '$(srcdir)/'`bindings/php/megaapi_wrap.cpp
	$(AM_V_at)$(am__mv) bindings/php/$(DEPDIR)/bindings_php_libmegaphp_la-megaapi_wrap.Tpo bindings/php/$(DEPDIR)/bindings_php_libmegaphp_la-megaapi_wrap.Plo
#	$(AM_V_CXX)source='bindings/php/megaapi_wrap.cpp' object='bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bindings_php_libmegaphp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bindings/php/bindings_php_libmegaphp_la-megaapi_wrap.lo `test -f 'bindings/php/megaapi_wrap.cpp' || echo '$(srcdir)/'`bindings/php/megaapi_wrap.cpp

bindings/python/bindings_python__mega_la-megaapi_wrap.lo: bindings/python/megaapi_wrap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bindings_python__mega_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bindings/python/bindings_python__mega_la-megaapi_wrap.lo -MD -MP -MF bindings/python/$(DEPDIR)/bindings_python__mega_la-megaapi_wrap.Tpo -c -o bindings/python/bindings_python__mega_la-megaapi_wrap.lo `test -f 'bindings/python/megaapi_wrap.cpp' || echo '$(srcdir)/'`bindings/python/megaapi_wrap.cpp
	$(AM_V_at)$(am__mv) bindings/python/$(DEPDIR)/bindings_python__mega_la-megaapi_wrap.Tpo bindings/python/$(DEPDIR)/bindings_python__mega_la-megaapi_wrap.Plo
#	$(AM_V_CXX)source='bindings/python/megaapi_wrap.cpp' object='bindings/python/bindings_python__mega_la-megaapi_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bindings_python__mega_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bindings/python/bindings_python__mega_la-megaapi_wrap.lo `test -f 'bindings/python/megaapi_wrap.cpp' || echo '$(srcdir)/'`bindings/python/megaapi_wrap.cpp

src/src_libmega_la-megaclient.lo: src/megaclient.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-megaclient.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-megaclient.Tpo -c -o src/src_libmega_la-megaclient.lo `test -f 'src/megaclient.cpp' || echo '$(srcdir)/'`src/megaclient.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-megaclient.Tpo src/$(DEPDIR)/src_libmega_la-megaclient.Plo
#	$(AM_V_CXX)source='src/megaclient.cpp' object='src/src_libmega_la-megaclient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-megaclient.lo `test -f 'src/megaclient.cpp' || echo '$(srcdir)/'`src/megaclient.cpp

src/src_libmega_la-attrmap.lo: src/attrmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-attrmap.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-attrmap.Tpo -c -o src/src_libmega_la-attrmap.lo `test -f 'src/attrmap.cpp' || echo '$(srcdir)/'`src/attrmap.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-attrmap.Tpo src/$(DEPDIR)/src_libmega_la-attrmap.Plo
#	$(AM_V_CXX)source='src/attrmap.cpp' object='src/src_libmega_la-attrmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-attrmap.lo `test -f 'src/attrmap.cpp' || echo '$(srcdir)/'`src/attrmap.cpp

src/src_libmega_la-backofftimer.lo: src/backofftimer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-backofftimer.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-backofftimer.Tpo -c -o src/src_libmega_la-backofftimer.lo `test -f 'src/backofftimer.cpp' || echo '$(srcdir)/'`src/backofftimer.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-backofftimer.Tpo src/$(DEPDIR)/src_libmega_la-backofftimer.Plo
#	$(AM_V_CXX)source='src/backofftimer.cpp' object='src/src_libmega_la-backofftimer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-backofftimer.lo `test -f 'src/backofftimer.cpp' || echo '$(srcdir)/'`src/backofftimer.cpp

src/src_libmega_la-base64.lo: src/base64.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-base64.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-base64.Tpo -c -o src/src_libmega_la-base64.lo `test -f 'src/base64.cpp' || echo '$(srcdir)/'`src/base64.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-base64.Tpo src/$(DEPDIR)/src_libmega_la-base64.Plo
#	$(AM_V_CXX)source='src/base64.cpp' object='src/src_libmega_la-base64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-base64.lo `test -f 'src/base64.cpp' || echo '$(srcdir)/'`src/base64.cpp

src/src_libmega_la-command.lo: src/command.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-command.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-command.Tpo -c -o src/src_libmega_la-command.lo `test -f 'src/command.cpp' || echo '$(srcdir)/'`src/command.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-command.Tpo src/$(DEPDIR)/src_libmega_la-command.Plo
#	$(AM_V_CXX)source='src/command.cpp' object='src/src_libmega_la-command.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-command.lo `test -f 'src/command.cpp' || echo '$(srcdir)/'`src/command.cpp

src/src_libmega_la-commands.lo: src/commands.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-commands.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-commands.Tpo -c -o src/src_libmega_la-commands.lo `test -f 'src/commands.cpp' || echo '$(srcdir)/'`src/commands.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-commands.Tpo src/$(DEPDIR)/src_libmega_la-commands.Plo
#	$(AM_V_CXX)source='src/commands.cpp' object='src/src_libmega_la-commands.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-commands.lo `test -f 'src/commands.cpp' || echo '$(srcdir)/'`src/commands.cpp

src/src_libmega_la-db.lo: src/db.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-db.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-db.Tpo -c -o src/src_libmega_la-db.lo `test -f 'src/db.cpp' || echo '$(srcdir)/'`src/db.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-db.Tpo src/$(DEPDIR)/src_libmega_la-db.Plo
#	$(AM_V_CXX)source='src/db.cpp' object='src/src_libmega_la-db.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-db.lo `test -f 'src/db.cpp' || echo '$(srcdir)/'`src/db.cpp

src/src_libmega_la-fileattributefetch.lo: src/fileattributefetch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-fileattributefetch.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-fileattributefetch.Tpo -c -o src/src_libmega_la-fileattributefetch.lo `test -f 'src/fileattributefetch.cpp' || echo '$(srcdir)/'`src/fileattributefetch.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-fileattributefetch.Tpo src/$(DEPDIR)/src_libmega_la-fileattributefetch.Plo
#	$(AM_V_CXX)source='src/fileattributefetch.cpp' object='src/src_libmega_la-fileattributefetch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-fileattributefetch.lo `test -f 'src/fileattributefetch.cpp' || echo '$(srcdir)/'`src/fileattributefetch.cpp

src/src_libmega_la-file.lo: src/file.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-file.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-file.Tpo -c -o src/src_libmega_la-file.lo `test -f 'src/file.cpp' || echo '$(srcdir)/'`src/file.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-file.Tpo src/$(DEPDIR)/src_libmega_la-file.Plo
#	$(AM_V_CXX)source='src/file.cpp' object='src/src_libmega_la-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-file.lo `test -f 'src/file.cpp' || echo '$(srcdir)/'`src/file.cpp

src/src_libmega_la-filefingerprint.lo: src/filefingerprint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-filefingerprint.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-filefingerprint.Tpo -c -o src/src_libmega_la-filefingerprint.lo `test -f 'src/filefingerprint.cpp' || echo '$(srcdir)/'`src/filefingerprint.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-filefingerprint.Tpo src/$(DEPDIR)/src_libmega_la-filefingerprint.Plo
#	$(AM_V_CXX)source='src/filefingerprint.cpp' object='src/src_libmega_la-filefingerprint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-filefingerprint.lo `test -f 'src/filefingerprint.cpp' || echo '$(srcdir)/'`src/filefingerprint.cpp

src/src_libmega_la-filesystem.lo: src/filesystem.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-filesystem.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-filesystem.Tpo -c -o src/src_libmega_la-filesystem.lo `test -f 'src/filesystem.cpp' || echo '$(srcdir)/'`src/filesystem.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-filesystem.Tpo src/$(DEPDIR)/src_libmega_la-filesystem.Plo
#	$(AM_V_CXX)source='src/filesystem.cpp' object='src/src_libmega_la-filesystem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-filesystem.lo `test -f 'src/filesystem.cpp' || echo '$(srcdir)/'`src/filesystem.cpp

src/src_libmega_la-gfx.lo: src/gfx.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-gfx.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-gfx.Tpo -c -o src/src_libmega_la-gfx.lo `test -f 'src/gfx.cpp' || echo '$(srcdir)/'`src/gfx.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-gfx.Tpo src/$(DEPDIR)/src_libmega_la-gfx.Plo
#	$(AM_V_CXX)source='src/gfx.cpp' object='src/src_libmega_la-gfx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-gfx.lo `test -f 'src/gfx.cpp' || echo '$(srcdir)/'`src/gfx.cpp

src/src_libmega_la-http.lo: src/http.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-http.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-http.Tpo -c -o src/src_libmega_la-http.lo `test -f 'src/http.cpp' || echo '$(srcdir)/'`src/http.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-http.Tpo src/$(DEPDIR)/src_libmega_la-http.Plo
#	$(AM_V_CXX)source='src/http.cpp' object='src/src_libmega_la-http.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-http.lo `test -f 'src/http.cpp' || echo '$(srcdir)/'`src/http.cpp

src/src_libmega_la-json.lo: src/json.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-json.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-json.Tpo -c -o src/src_libmega_la-json.lo `test -f 'src/json.cpp' || echo '$(srcdir)/'`src/json.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-json.Tpo src/$(DEPDIR)/src_libmega_la-json.Plo
#	$(AM_V_CXX)source='src/json.cpp' object='src/src_libmega_la-json.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-json.lo `test -f 'src/json.cpp' || echo '$(srcdir)/'`src/json.cpp

src/src_libmega_la-mediafileattribute.lo: src/mediafileattribute.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-mediafileattribute.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-mediafileattribute.Tpo -c -o src/src_libmega_la-mediafileattribute.lo `test -f 'src/mediafileattribute.cpp' || echo '$(srcdir)/'`src/mediafileattribute.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-mediafileattribute.Tpo src/$(DEPDIR)/src_libmega_la-mediafileattribute.Plo
#	$(AM_V_CXX)source='src/mediafileattribute.cpp' object='src/src_libmega_la-mediafileattribute.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-mediafileattribute.lo `test -f 'src/mediafileattribute.cpp' || echo '$(srcdir)/'`src/mediafileattribute.cpp

src/src_libmega_la-node.lo: src/node.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-node.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-node.Tpo -c -o src/src_libmega_la-node.lo `test -f 'src/node.cpp' || echo '$(srcdir)/'`src/node.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-node.Tpo src/$(DEPDIR)/src_libmega_la-node.Plo
#	$(AM_V_CXX)source='src/node.cpp' object='src/src_libmega_la-node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-node.lo `test -f 'src/node.cpp' || echo '$(srcdir)/'`src/node.cpp

src/src_libmega_la-pubkeyaction.lo: src/pubkeyaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-pubkeyaction.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-pubkeyaction.Tpo -c -o src/src_libmega_la-pubkeyaction.lo `test -f 'src/pubkeyaction.cpp' || echo '$(srcdir)/'`src/pubkeyaction.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-pubkeyaction.Tpo src/$(DEPDIR)/src_libmega_la-pubkeyaction.Plo
#	$(AM_V_CXX)source='src/pubkeyaction.cpp' object='src/src_libmega_la-pubkeyaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-pubkeyaction.lo `test -f 'src/pubkeyaction.cpp' || echo '$(srcdir)/'`src/pubkeyaction.cpp

src/src_libmega_la-request.lo: src/request.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-request.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-request.Tpo -c -o src/src_libmega_la-request.lo `test -f 'src/request.cpp' || echo '$(srcdir)/'`src/request.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-request.Tpo src/$(DEPDIR)/src_libmega_la-request.Plo
#	$(AM_V_CXX)source='src/request.cpp' object='src/src_libmega_la-request.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-request.lo `test -f 'src/request.cpp' || echo '$(srcdir)/'`src/request.cpp

src/src_libmega_la-serialize64.lo: src/serialize64.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-serialize64.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-serialize64.Tpo -c -o src/src_libmega_la-serialize64.lo `test -f 'src/serialize64.cpp' || echo '$(srcdir)/'`src/serialize64.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-serialize64.Tpo src/$(DEPDIR)/src_libmega_la-serialize64.Plo
#	$(AM_V_CXX)source='src/serialize64.cpp' object='src/src_libmega_la-serialize64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-serialize64.lo `test -f 'src/serialize64.cpp' || echo '$(srcdir)/'`src/serialize64.cpp

src/src_libmega_la-share.lo: src/share.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-share.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-share.Tpo -c -o src/src_libmega_la-share.lo `test -f 'src/share.cpp' || echo '$(srcdir)/'`src/share.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-share.Tpo src/$(DEPDIR)/src_libmega_la-share.Plo
#	$(AM_V_CXX)source='src/share.cpp' object='src/src_libmega_la-share.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-share.lo `test -f 'src/share.cpp' || echo '$(srcdir)/'`src/share.cpp

src/src_libmega_la-sharenodekeys.lo: src/sharenodekeys.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-sharenodekeys.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-sharenodekeys.Tpo -c -o src/src_libmega_la-sharenodekeys.lo `test -f 'src/sharenodekeys.cpp' || echo '$(srcdir)/'`src/sharenodekeys.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-sharenodekeys.Tpo src/$(DEPDIR)/src_libmega_la-sharenodekeys.Plo
#	$(AM_V_CXX)source='src/sharenodekeys.cpp' object='src/src_libmega_la-sharenodekeys.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-sharenodekeys.lo `test -f 'src/sharenodekeys.cpp' || echo '$(srcdir)/'`src/sharenodekeys.cpp

src/src_libmega_la-sync.lo: src/sync.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-sync.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-sync.Tpo -c -o src/src_libmega_la-sync.lo `test -f 'src/sync.cpp' || echo '$(srcdir)/'`src/sync.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-sync.Tpo src/$(DEPDIR)/src_libmega_la-sync.Plo
#	$(AM_V_CXX)source='src/sync.cpp' object='src/src_libmega_la-sync.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-sync.lo `test -f 'src/sync.cpp' || echo '$(srcdir)/'`src/sync.cpp

src/src_libmega_la-transfer.lo: src/transfer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-transfer.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-transfer.Tpo -c -o src/src_libmega_la-transfer.lo `test -f 'src/transfer.cpp' || echo '$(srcdir)/'`src/transfer.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-transfer.Tpo src/$(DEPDIR)/src_libmega_la-transfer.Plo
#	$(AM_V_CXX)source='src/transfer.cpp' object='src/src_libmega_la-transfer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-transfer.lo `test -f 'src/transfer.cpp' || echo '$(srcdir)/'`src/transfer.cpp

src/src_libmega_la-transferslot.lo: src/transferslot.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-transferslot.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-transferslot.Tpo -c -o src/src_libmega_la-transferslot.lo `test -f 'src/transferslot.cpp' || echo '$(srcdir)/'`src/transferslot.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-transferslot.Tpo src/$(DEPDIR)/src_libmega_la-transferslot.Plo
#	$(AM_V_CXX)source='src/transferslot.cpp' object='src/src_libmega_la-transferslot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-transferslot.lo `test -f 'src/transferslot.cpp' || echo '$(srcdir)/'`src/transferslot.cpp

src/src_libmega_la-treeproc.lo: src/treeproc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-treeproc.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-treeproc.Tpo -c -o src/src_libmega_la-treeproc.lo `test -f 'src/treeproc.cpp' || echo '$(srcdir)/'`src/treeproc.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-treeproc.Tpo src/$(DEPDIR)/src_libmega_la-treeproc.Plo
#	$(AM_V_CXX)source='src/treeproc.cpp' object='src/src_libmega_la-treeproc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-treeproc.lo `test -f 'src/treeproc.cpp' || echo '$(srcdir)/'`src/treeproc.cpp

src/src_libmega_la-user.lo: src/user.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-user.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-user.Tpo -c -o src/src_libmega_la-user.lo `test -f 'src/user.cpp' || echo '$(srcdir)/'`src/user.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-user.Tpo src/$(DEPDIR)/src_libmega_la-user.Plo
#	$(AM_V_CXX)source='src/user.cpp' object='src/src_libmega_la-user.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-user.lo `test -f 'src/user.cpp' || echo '$(srcdir)/'`src/user.cpp

src/src_libmega_la-utils.lo: src/utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-utils.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-utils.Tpo -c -o src/src_libmega_la-utils.lo `test -f 'src/utils.cpp' || echo '$(srcdir)/'`src/utils.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-utils.Tpo src/$(DEPDIR)/src_libmega_la-utils.Plo
#	$(AM_V_CXX)source='src/utils.cpp' object='src/src_libmega_la-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-utils.lo `test -f 'src/utils.cpp' || echo '$(srcdir)/'`src/utils.cpp

src/src_libmega_la-logging.lo: src/logging.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-logging.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-logging.Tpo -c -o src/src_libmega_la-logging.lo `test -f 'src/logging.cpp' || echo '$(srcdir)/'`src/logging.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-logging.Tpo src/$(DEPDIR)/src_libmega_la-logging.Plo
#	$(AM_V_CXX)source='src/logging.cpp' object='src/src_libmega_la-logging.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-logging.lo `test -f 'src/logging.cpp' || echo '$(srcdir)/'`src/logging.cpp

src/src_libmega_la-waiterbase.lo: src/waiterbase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-waiterbase.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-waiterbase.Tpo -c -o src/src_libmega_la-waiterbase.lo `test -f 'src/waiterbase.cpp' || echo '$(srcdir)/'`src/waiterbase.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-waiterbase.Tpo src/$(DEPDIR)/src_libmega_la-waiterbase.Plo
#	$(AM_V_CXX)source='src/waiterbase.cpp' object='src/src_libmega_la-waiterbase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-waiterbase.lo `test -f 'src/waiterbase.cpp' || echo '$(srcdir)/'`src/waiterbase.cpp

src/src_libmega_la-proxy.lo: src/proxy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-proxy.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-proxy.Tpo -c -o src/src_libmega_la-proxy.lo `test -f 'src/proxy.cpp' || echo '$(srcdir)/'`src/proxy.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-proxy.Tpo src/$(DEPDIR)/src_libmega_la-proxy.Plo
#	$(AM_V_CXX)source='src/proxy.cpp' object='src/src_libmega_la-proxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-proxy.lo `test -f 'src/proxy.cpp' || echo '$(srcdir)/'`src/proxy.cpp

src/crypto/src_libmega_la-cryptopp.lo: src/crypto/cryptopp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/crypto/src_libmega_la-cryptopp.lo -MD -MP -MF src/crypto/$(DEPDIR)/src_libmega_la-cryptopp.Tpo -c -o src/crypto/src_libmega_la-cryptopp.lo `test -f 'src/crypto/cryptopp.cpp' || echo '$(srcdir)/'`src/crypto/cryptopp.cpp
	$(AM_V_at)$(am__mv) src/crypto/$(DEPDIR)/src_libmega_la-cryptopp.Tpo src/crypto/$(DEPDIR)/src_libmega_la-cryptopp.Plo
#	$(AM_V_CXX)source='src/crypto/cryptopp.cpp' object='src/crypto/src_libmega_la-cryptopp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/crypto/src_libmega_la-cryptopp.lo `test -f 'src/crypto/cryptopp.cpp' || echo '$(srcdir)/'`src/crypto/cryptopp.cpp

src/db/src_libmega_la-sqlite.lo: src/db/sqlite.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/db/src_libmega_la-sqlite.lo -MD -MP -MF src/db/$(DEPDIR)/src_libmega_la-sqlite.Tpo -c -o src/db/src_libmega_la-sqlite.lo `test -f 'src/db/sqlite.cpp' || echo '$(srcdir)/'`src/db/sqlite.cpp
	$(AM_V_at)$(am__mv) src/db/$(DEPDIR)/src_libmega_la-sqlite.Tpo src/db/$(DEPDIR)/src_libmega_la-sqlite.Plo
#	$(AM_V_CXX)source='src/db/sqlite.cpp' object='src/db/src_libmega_la-sqlite.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/db/src_libmega_la-sqlite.lo `test -f 'src/db/sqlite.cpp' || echo '$(srcdir)/'`src/db/sqlite.cpp

src/src_libmega_la-mega_utf8proc.lo: src/mega_utf8proc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-mega_utf8proc.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-mega_utf8proc.Tpo -c -o src/src_libmega_la-mega_utf8proc.lo `test -f 'src/mega_utf8proc.cpp' || echo '$(srcdir)/'`src/mega_utf8proc.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-mega_utf8proc.Tpo src/$(DEPDIR)/src_libmega_la-mega_utf8proc.Plo
#	$(AM_V_CXX)source='src/mega_utf8proc.cpp' object='src/src_libmega_la-mega_utf8proc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-mega_utf8proc.lo `test -f 'src/mega_utf8proc.cpp' || echo '$(srcdir)/'`src/mega_utf8proc.cpp

src/gfx/src_libmega_la-external.lo: src/gfx/external.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/gfx/src_libmega_la-external.lo -MD -MP -MF src/gfx/$(DEPDIR)/src_libmega_la-external.Tpo -c -o src/gfx/src_libmega_la-external.lo `test -f 'src/gfx/external.cpp' || echo '$(srcdir)/'`src/gfx/external.cpp
	$(AM_V_at)$(am__mv) src/gfx/$(DEPDIR)/src_libmega_la-external.Tpo src/gfx/$(DEPDIR)/src_libmega_la-external.Plo
#	$(AM_V_CXX)source='src/gfx/external.cpp' object='src/gfx/src_libmega_la-external.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/gfx/src_libmega_la-external.lo `test -f 'src/gfx/external.cpp' || echo '$(srcdir)/'`src/gfx/external.cpp

src/src_libmega_la-pendingcontactrequest.lo: src/pendingcontactrequest.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-pendingcontactrequest.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-pendingcontactrequest.Tpo -c -o src/src_libmega_la-pendingcontactrequest.lo `test -f 'src/pendingcontactrequest.cpp' || echo '$(srcdir)/'`src/pendingcontactrequest.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-pendingcontactrequest.Tpo src/$(DEPDIR)/src_libmega_la-pendingcontactrequest.Plo
#	$(AM_V_CXX)source='src/pendingcontactrequest.cpp' object='src/src_libmega_la-pendingcontactrequest.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-pendingcontactrequest.lo `test -f 'src/pendingcontactrequest.cpp' || echo '$(srcdir)/'`src/pendingcontactrequest.cpp

src/src_libmega_la-mega_zxcvbn.lo: src/mega_zxcvbn.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-mega_zxcvbn.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-mega_zxcvbn.Tpo -c -o src/src_libmega_la-mega_zxcvbn.lo `test -f 'src/mega_zxcvbn.cpp' || echo '$(srcdir)/'`src/mega_zxcvbn.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-mega_zxcvbn.Tpo src/$(DEPDIR)/src_libmega_la-mega_zxcvbn.Plo
#	$(AM_V_CXX)source='src/mega_zxcvbn.cpp' object='src/src_libmega_la-mega_zxcvbn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-mega_zxcvbn.lo `test -f 'src/mega_zxcvbn.cpp' || echo '$(srcdir)/'`src/mega_zxcvbn.cpp

src/src_libmega_la-megaapi_impl.lo: src/megaapi_impl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-megaapi_impl.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-megaapi_impl.Tpo -c -o src/src_libmega_la-megaapi_impl.lo `test -f 'src/megaapi_impl.cpp' || echo '$(srcdir)/'`src/megaapi_impl.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-megaapi_impl.Tpo src/$(DEPDIR)/src_libmega_la-megaapi_impl.Plo
#	$(AM_V_CXX)source='src/megaapi_impl.cpp' object='src/src_libmega_la-megaapi_impl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-megaapi_impl.lo `test -f 'src/megaapi_impl.cpp' || echo '$(srcdir)/'`src/megaapi_impl.cpp

src/src_libmega_la-megaapi.lo: src/megaapi.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-megaapi.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-megaapi.Tpo -c -o src/src_libmega_la-megaapi.lo `test -f 'src/megaapi.cpp' || echo '$(srcdir)/'`src/megaapi.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-megaapi.Tpo src/$(DEPDIR)/src_libmega_la-megaapi.Plo
#	$(AM_V_CXX)source='src/megaapi.cpp' object='src/src_libmega_la-megaapi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-megaapi.lo `test -f 'src/megaapi.cpp' || echo '$(srcdir)/'`src/megaapi.cpp

src/gfx/src_libmega_la-freeimage.lo: src/gfx/freeimage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/gfx/src_libmega_la-freeimage.lo -MD -MP -MF src/gfx/$(DEPDIR)/src_libmega_la-freeimage.Tpo -c -o src/gfx/src_libmega_la-freeimage.lo `test -f 'src/gfx/freeimage.cpp' || echo '$(srcdir)/'`src/gfx/freeimage.cpp
	$(AM_V_at)$(am__mv) src/gfx/$(DEPDIR)/src_libmega_la-freeimage.Tpo src/gfx/$(DEPDIR)/src_libmega_la-freeimage.Plo
#	$(AM_V_CXX)source='src/gfx/freeimage.cpp' object='src/gfx/src_libmega_la-freeimage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/gfx/src_libmega_la-freeimage.lo `test -f 'src/gfx/freeimage.cpp' || echo '$(srcdir)/'`src/gfx/freeimage.cpp

src/crypto/src_libmega_la-sodium.lo: src/crypto/sodium.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/crypto/src_libmega_la-sodium.lo -MD -MP -MF src/crypto/$(DEPDIR)/src_libmega_la-sodium.Tpo -c -o src/crypto/src_libmega_la-sodium.lo `test -f 'src/crypto/sodium.cpp' || echo '$(srcdir)/'`src/crypto/sodium.cpp
	$(AM_V_at)$(am__mv) src/crypto/$(DEPDIR)/src_libmega_la-sodium.Tpo src/crypto/$(DEPDIR)/src_libmega_la-sodium.Plo
#	$(AM_V_CXX)source='src/crypto/sodium.cpp' object='src/crypto/src_libmega_la-sodium.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/crypto/src_libmega_la-sodium.lo `test -f 'src/crypto/sodium.cpp' || echo '$(srcdir)/'`src/crypto/sodium.cpp

src/src_libmega_la-mega_http_parser.lo: src/mega_http_parser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/src_libmega_la-mega_http_parser.lo -MD -MP -MF src/$(DEPDIR)/src_libmega_la-mega_http_parser.Tpo -c -o src/src_libmega_la-mega_http_parser.lo `test -f 'src/mega_http_parser.cpp' || echo '$(srcdir)/'`src/mega_http_parser.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libmega_la-mega_http_parser.Tpo src/$(DEPDIR)/src_libmega_la-mega_http_parser.Plo
#	$(AM_V_CXX)source='src/mega_http_parser.cpp' object='src/src_libmega_la-mega_http_parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/src_libmega_la-mega_http_parser.lo `test -f 'src/mega_http_parser.cpp' || echo '$(srcdir)/'`src/mega_http_parser.cpp

src/win32/src_libmega_la-fs.lo: src/win32/fs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/win32/src_libmega_la-fs.lo -MD -MP -MF src/win32/$(DEPDIR)/src_libmega_la-fs.Tpo -c -o src/win32/src_libmega_la-fs.lo `test -f 'src/win32/fs.cpp' || echo '$(srcdir)/'`src/win32/fs.cpp
	$(AM_V_at)$(am__mv) src/win32/$(DEPDIR)/src_libmega_la-fs.Tpo src/win32/$(DEPDIR)/src_libmega_la-fs.Plo
#	$(AM_V_CXX)source='src/win32/fs.cpp' object='src/win32/src_libmega_la-fs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/win32/src_libmega_la-fs.lo `test -f 'src/win32/fs.cpp' || echo '$(srcdir)/'`src/win32/fs.cpp

src/win32/src_libmega_la-console.lo: src/win32/console.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/win32/src_libmega_la-console.lo -MD -MP -MF src/win32/$(DEPDIR)/src_libmega_la-console.Tpo -c -o src/win32/src_libmega_la-console.lo `test -f 'src/win32/console.cpp' || echo '$(srcdir)/'`src/win32/console.cpp
	$(AM_V_at)$(am__mv) src/win32/$(DEPDIR)/src_libmega_la-console.Tpo src/win32/$(DEPDIR)/src_libmega_la-console.Plo
#	$(AM_V_CXX)source='src/win32/console.cpp' object='src/win32/src_libmega_la-console.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/win32/src_libmega_la-console.lo `test -f 'src/win32/console.cpp' || echo '$(srcdir)/'`src/win32/console.cpp

src/win32/src_libmega_la-net.lo: src/win32/net.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/win32/src_libmega_la-net.lo -MD -MP -MF src/win32/$(DEPDIR)/src_libmega_la-net.Tpo -c -o src/win32/src_libmega_la-net.lo `test -f 'src/win32/net.cpp' || echo '$(srcdir)/'`src/win32/net.cpp
	$(AM_V_at)$(am__mv) src/win32/$(DEPDIR)/src_libmega_la-net.Tpo src/win32/$(DEPDIR)/src_libmega_la-net.Plo
#	$(AM_V_CXX)source='src/win32/net.cpp' object='src/win32/src_libmega_la-net.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/win32/src_libmega_la-net.lo `test -f 'src/win32/net.cpp' || echo '$(srcdir)/'`src/win32/net.cpp

src/win32/src_libmega_la-waiter.lo: src/win32/waiter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/win32/src_libmega_la-waiter.lo -MD -MP -MF src/win32/$(DEPDIR)/src_libmega_la-waiter.Tpo -c -o src/win32/src_libmega_la-waiter.lo `test -f 'src/win32/waiter.cpp' || echo '$(srcdir)/'`src/win32/waiter.cpp
	$(AM_V_at)$(am__mv) src/win32/$(DEPDIR)/src_libmega_la-waiter.Tpo src/win32/$(DEPDIR)/src_libmega_la-waiter.Plo
#	$(AM_V_CXX)source='src/win32/waiter.cpp' object='src/win32/src_libmega_la-waiter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/win32/src_libmega_la-waiter.lo `test -f 'src/win32/waiter.cpp' || echo '$(srcdir)/'`src/win32/waiter.cpp

src/win32/src_libmega_la-consolewaiter.lo: src/win32/consolewaiter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/win32/src_libmega_la-consolewaiter.lo -MD -MP -MF src/win32/$(DEPDIR)/src_libmega_la-consolewaiter.Tpo -c -o src/win32/src_libmega_la-consolewaiter.lo `test -f 'src/win32/consolewaiter.cpp' || echo '$(srcdir)/'`src/win32/consolewaiter.cpp
	$(AM_V_at)$(am__mv) src/win32/$(DEPDIR)/src_libmega_la-consolewaiter.Tpo src/win32/$(DEPDIR)/src_libmega_la-consolewaiter.Plo
#	$(AM_V_CXX)source='src/win32/consolewaiter.cpp' object='src/win32/src_libmega_la-consolewaiter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/win32/src_libmega_la-consolewaiter.lo `test -f 'src/win32/consolewaiter.cpp' || echo '$(srcdir)/'`src/win32/consolewaiter.cpp

src/thread/src_libmega_la-posixthread.lo: src/thread/posixthread.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/thread/src_libmega_la-posixthread.lo -MD -MP -MF src/thread/$(DEPDIR)/src_libmega_la-posixthread.Tpo -c -o src/thread/src_libmega_la-posixthread.lo `test -f 'src/thread/posixthread.cpp' || echo '$(srcdir)/'`src/thread/posixthread.cpp
	$(AM_V_at)$(am__mv) src/thread/$(DEPDIR)/src_libmega_la-posixthread.Tpo src/thread/$(DEPDIR)/src_libmega_la-posixthread.Plo
#	$(AM_V_CXX)source='src/thread/posixthread.cpp' object='src/thread/src_libmega_la-posixthread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/thread/src_libmega_la-posixthread.lo `test -f 'src/thread/posixthread.cpp' || echo '$(srcdir)/'`src/thread/posixthread.cpp

src/thread/src_libmega_la-win32thread.lo: src/thread/win32thread.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/thread/src_libmega_la-win32thread.lo -MD -MP -MF src/thread/$(DEPDIR)/src_libmega_la-win32thread.Tpo -c -o src/thread/src_libmega_la-win32thread.lo `test -f 'src/thread/win32thread.cpp' || echo '$(srcdir)/'`src/thread/win32thread.cpp
	$(AM_V_at)$(am__mv) src/thread/$(DEPDIR)/src_libmega_la-win32thread.Tpo src/thread/$(DEPDIR)/src_libmega_la-win32thread.Plo
#	$(AM_V_CXX)source='src/thread/win32thread.cpp' object='src/thread/src_libmega_la-win32thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/thread/src_libmega_la-win32thread.lo `test -f 'src/thread/win32thread.cpp' || echo '$(srcdir)/'`src/thread/win32thread.cpp

src/posix/src_libmega_la-fs.lo: src/posix/fs.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/posix/src_libmega_la-fs.lo -MD -MP -MF src/posix/$(DEPDIR)/src_libmega_la-fs.Tpo -c -o src/posix/src_libmega_la-fs.lo `test -f 'src/posix/fs.cpp' || echo '$(srcdir)/'`src/posix/fs.cpp
	$(AM_V_at)$(am__mv) src/posix/$(DEPDIR)/src_libmega_la-fs.Tpo src/posix/$(DEPDIR)/src_libmega_la-fs.Plo
#	$(AM_V_CXX)source='src/posix/fs.cpp' object='src/posix/src_libmega_la-fs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/posix/src_libmega_la-fs.lo `test -f 'src/posix/fs.cpp' || echo '$(srcdir)/'`src/posix/fs.cpp

src/posix/src_libmega_la-console.lo: src/posix/console.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/posix/src_libmega_la-console.lo -MD -MP -MF src/posix/$(DEPDIR)/src_libmega_la-console.Tpo -c -o src/posix/src_libmega_la-console.lo `test -f 'src/posix/console.cpp' || echo '$(srcdir)/'`src/posix/console.cpp
	$(AM_V_at)$(am__mv) src/posix/$(DEPDIR)/src_libmega_la-console.Tpo src/posix/$(DEPDIR)/src_libmega_la-console.Plo
#	$(AM_V_CXX)source='src/posix/console.cpp' object='src/posix/src_libmega_la-console.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/posix/src_libmega_la-console.lo `test -f 'src/posix/console.cpp' || echo '$(srcdir)/'`src/posix/console.cpp

src/posix/src_libmega_la-net.lo: src/posix/net.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/posix/src_libmega_la-net.lo -MD -MP -MF src/posix/$(DEPDIR)/src_libmega_la-net.Tpo -c -o src/posix/src_libmega_la-net.lo `test -f 'src/posix/net.cpp' || echo '$(srcdir)/'`src/posix/net.cpp
	$(AM_V_at)$(am__mv) src/posix/$(DEPDIR)/src_libmega_la-net.Tpo src/posix/$(DEPDIR)/src_libmega_la-net.Plo
#	$(AM_V_CXX)source='src/posix/net.cpp' object='src/posix/src_libmega_la-net.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/posix/src_libmega_la-net.lo `test -f 'src/posix/net.cpp' || echo '$(srcdir)/'`src/posix/net.cpp

src/posix/src_libmega_la-waiter.lo: src/posix/waiter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/posix/src_libmega_la-waiter.lo -MD -MP -MF src/posix/$(DEPDIR)/src_libmega_la-waiter.Tpo -c -o src/posix/src_libmega_la-waiter.lo `test -f 'src/posix/waiter.cpp' || echo '$(srcdir)/'`src/posix/waiter.cpp
	$(AM_V_at)$(am__mv) src/posix/$(DEPDIR)/src_libmega_la-waiter.Tpo src/posix/$(DEPDIR)/src_libmega_la-waiter.Plo
#	$(AM_V_CXX)source='src/posix/waiter.cpp' object='src/posix/src_libmega_la-waiter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/posix/src_libmega_la-waiter.lo `test -f 'src/posix/waiter.cpp' || echo '$(srcdir)/'`src/posix/waiter.cpp

src/posix/src_libmega_la-consolewaiter.lo: src/posix/consolewaiter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -MT src/posix/src_libmega_la-consolewaiter.lo -MD -MP -MF src/posix/$(DEPDIR)/src_libmega_la-consolewaiter.Tpo -c -o src/posix/src_libmega_la-consolewaiter.lo `test -f 'src/posix/consolewaiter.cpp' || echo '$(srcdir)/'`src/posix/consolewaiter.cpp
	$(AM_V_at)$(am__mv) src/posix/$(DEPDIR)/src_libmega_la-consolewaiter.Tpo src/posix/$(DEPDIR)/src_libmega_la-consolewaiter.Plo
#	$(AM_V_CXX)source='src/posix/consolewaiter.cpp' object='src/posix/src_libmega_la-consolewaiter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_CXXFLAGS) $(CXXFLAGS) -c -o src/posix/src_libmega_la-consolewaiter.lo `test -f 'src/posix/consolewaiter.cpp' || echo '$(srcdir)/'`src/posix/consolewaiter.cpp

examples/linux/examples_linux_megafuse-megafuse.o: examples/linux/megafuse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_linux_megafuse_CXXFLAGS) $(CXXFLAGS) -MT examples/linux/examples_linux_megafuse-megafuse.o -MD -MP -MF examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Tpo -c -o examples/linux/examples_linux_megafuse-megafuse.o `test -f 'examples/linux/megafuse.cpp' || echo '$(srcdir)/'`examples/linux/megafuse.cpp
	$(AM_V_at)$(am__mv) examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Tpo examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Po
#	$(AM_V_CXX)source='examples/linux/megafuse.cpp' object='examples/linux/examples_linux_megafuse-megafuse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_linux_megafuse_CXXFLAGS) $(CXXFLAGS) -c -o examples/linux/examples_linux_megafuse-megafuse.o `test -f 'examples/linux/megafuse.cpp' || echo '$(srcdir)/'`examples/linux/megafuse.cpp

examples/linux/examples_linux_megafuse-megafuse.obj: examples/linux/megafuse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_linux_megafuse_CXXFLAGS) $(CXXFLAGS) -MT examples/linux/examples_linux_megafuse-megafuse.obj -MD -MP -MF examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Tpo -c -o examples/linux/examples_linux_megafuse-megafuse.obj `if test -f 'examples/linux/megafuse.cpp'; then $(CYGPATH_W) 'examples/linux/megafuse.cpp'; else $(CYGPATH_W) '$(srcdir)/examples/linux/megafuse.cpp'; fi`
	$(AM_V_at)$(am__mv) examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Tpo examples/linux/$(DEPDIR)/examples_linux_megafuse-megafuse.Po
#	$(AM_V_CXX)source='examples/linux/megafuse.cpp' object='examples/linux/examples_linux_megafuse-megafuse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_linux_megafuse_CXXFLAGS) $(CXXFLAGS) -c -o examples/linux/examples_linux_megafuse-megafuse.obj `if test -f 'examples/linux/megafuse.cpp'; then $(CYGPATH_W) 'examples/linux/megafuse.cpp'; else $(CYGPATH_W) '$(srcdir)/examples/linux/megafuse.cpp'; fi`

examples/examples_megacli-megacli.o: examples/megacli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megacli_CXXFLAGS) $(CXXFLAGS) -MT examples/examples_megacli-megacli.o -MD -MP -MF examples/$(DEPDIR)/examples_megacli-megacli.Tpo -c -o examples/examples_megacli-megacli.o `test -f 'examples/megacli.cpp' || echo '$(srcdir)/'`examples/megacli.cpp
	$(AM_V_at)$(am__mv) examples/$(DEPDIR)/examples_megacli-megacli.Tpo examples/$(DEPDIR)/examples_megacli-megacli.Po
#	$(AM_V_CXX)source='examples/megacli.cpp' object='examples/examples_megacli-megacli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megacli_CXXFLAGS) $(CXXFLAGS) -c -o examples/examples_megacli-megacli.o `test -f 'examples/megacli.cpp' || echo '$(srcdir)/'`examples/megacli.cpp

examples/examples_megacli-megacli.obj: examples/megacli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megacli_CXXFLAGS) $(CXXFLAGS) -MT examples/examples_megacli-megacli.obj -MD -MP -MF examples/$(DEPDIR)/examples_megacli-megacli.Tpo -c -o examples/examples_megacli-megacli.obj `if test -f 'examples/megacli.cpp'; then $(CYGPATH_W) 'examples/megacli.cpp'; else $(CYGPATH_W) '$(srcdir)/examples/megacli.cpp'; fi`
	$(AM_V_at)$(am__mv) examples/$(DEPDIR)/examples_megacli-megacli.Tpo examples/$(DEPDIR)/examples_megacli-megacli.Po
#	$(AM_V_CXX)source='examples/megacli.cpp' object='examples/examples_megacli-megacli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megacli_CXXFLAGS) $(CXXFLAGS) -c -o examples/examples_megacli-megacli.obj `if test -f 'examples/megacli.cpp'; then $(CYGPATH_W) 'examples/megacli.cpp'; else $(CYGPATH_W) '$(srcdir)/examples/megacli.cpp'; fi`

examples/examples_megasimplesync-megasimplesync.o: examples/megasimplesync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megasimplesync_CXXFLAGS) $(CXXFLAGS) -MT examples/examples_megasimplesync-megasimplesync.o -MD -MP -MF examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Tpo -c -o examples/examples_megasimplesync-megasimplesync.o `test -f 'examples/megasimplesync.cpp' || echo '$(srcdir)/'`examples/megasimplesync.cpp
	$(AM_V_at)$(am__mv) examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Tpo examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Po
#	$(AM_V_CXX)source='examples/megasimplesync.cpp' object='examples/examples_megasimplesync-megasimplesync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megasimplesync_CXXFLAGS) $(CXXFLAGS) -c -o examples/examples_megasimplesync-megasimplesync.o `test -f 'examples/megasimplesync.cpp' || echo '$(srcdir)/'`examples/megasimplesync.cpp

examples/examples_megasimplesync-megasimplesync.obj: examples/megasimplesync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megasimplesync_CXXFLAGS) $(CXXFLAGS) -MT examples/examples_megasimplesync-megasimplesync.obj -MD -MP -MF examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Tpo -c -o examples/examples_megasimplesync-megasimplesync.obj `if test -f 'examples/megasimplesync.cpp'; then $(CYGPATH_W) 'examples/megasimplesync.cpp'; else $(CYGPATH_W) '$(srcdir)/examples/megasimplesync.cpp'; fi`
	$(AM_V_at)$(am__mv) examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Tpo examples/$(DEPDIR)/examples_megasimplesync-megasimplesync.Po
#	$(AM_V_CXX)source='examples/megasimplesync.cpp' object='examples/examples_megasimplesync-megasimplesync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(examples_megasimplesync_CXXFLAGS) $(CXXFLAGS) -c -o examples/examples_megasimplesync-megasimplesync.obj `if test -f 'examples/megasimplesync.cpp'; then $(CYGPATH_W) 'examples/megasimplesync.cpp'; else $(CYGPATH_W) '$(srcdir)/examples/megasimplesync.cpp'; fi`

tests/tests_misc_test-tests.o: tests/tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_misc_test-tests.o -MD -MP -MF tests/$(DEPDIR)/tests_misc_test-tests.Tpo -c -o tests/tests_misc_test-tests.o `test -f 'tests/tests.cpp' || echo '$(srcdir)/'`tests/tests.cpp
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_misc_test-tests.Tpo tests/$(DEPDIR)/tests_misc_test-tests.Po
#	$(AM_V_CXX)source='tests/tests.cpp' object='tests/tests_misc_test-tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_misc_test-tests.o `test -f 'tests/tests.cpp' || echo '$(srcdir)/'`tests/tests.cpp

tests/tests_misc_test-tests.obj: tests/tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_misc_test-tests.obj -MD -MP -MF tests/$(DEPDIR)/tests_misc_test-tests.Tpo -c -o tests/tests_misc_test-tests.obj `if test -f 'tests/tests.cpp'; then $(CYGPATH_W) 'tests/tests.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/tests.cpp'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_misc_test-tests.Tpo tests/$(DEPDIR)/tests_misc_test-tests.Po
#	$(AM_V_CXX)source='tests/tests.cpp' object='tests/tests_misc_test-tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_misc_test-tests.obj `if test -f 'tests/tests.cpp'; then $(CYGPATH_W) 'tests/tests.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/tests.cpp'; fi`

tests/tests_misc_test-paycrypt_test.o: tests/paycrypt_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_misc_test-paycrypt_test.o -MD -MP -MF tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Tpo -c -o tests/tests_misc_test-paycrypt_test.o `test -f 'tests/paycrypt_test.cpp' || echo '$(srcdir)/'`tests/paycrypt_test.cpp
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Tpo tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Po
#	$(AM_V_CXX)source='tests/paycrypt_test.cpp' object='tests/tests_misc_test-paycrypt_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_misc_test-paycrypt_test.o `test -f 'tests/paycrypt_test.cpp' || echo '$(srcdir)/'`tests/paycrypt_test.cpp

tests/tests_misc_test-paycrypt_test.obj: tests/paycrypt_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_misc_test-paycrypt_test.obj -MD -MP -MF tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Tpo -c -o tests/tests_misc_test-paycrypt_test.obj `if test -f 'tests/paycrypt_test.cpp'; then $(CYGPATH_W) 'tests/paycrypt_test.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/paycrypt_test.cpp'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Tpo tests/$(DEPDIR)/tests_misc_test-paycrypt_test.Po
#	$(AM_V_CXX)source='tests/paycrypt_test.cpp' object='tests/tests_misc_test-paycrypt_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_misc_test-paycrypt_test.obj `if test -f 'tests/paycrypt_test.cpp'; then $(CYGPATH_W) 'tests/paycrypt_test.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/paycrypt_test.cpp'; fi`

tests/tests_misc_test-crypto_test.o: tests/crypto_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_misc_test-crypto_test.o -MD -MP -MF tests/$(DEPDIR)/tests_misc_test-crypto_test.Tpo -c -o tests/tests_misc_test-crypto_test.o `test -f 'tests/crypto_test.cpp' || echo '$(srcdir)/'`tests/crypto_test.cpp
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_misc_test-crypto_test.Tpo tests/$(DEPDIR)/tests_misc_test-crypto_test.Po
#	$(AM_V_CXX)source='tests/crypto_test.cpp' object='tests/tests_misc_test-crypto_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_misc_test-crypto_test.o `test -f 'tests/crypto_test.cpp' || echo '$(srcdir)/'`tests/crypto_test.cpp

tests/tests_misc_test-crypto_test.obj: tests/crypto_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_misc_test-crypto_test.obj -MD -MP -MF tests/$(DEPDIR)/tests_misc_test-crypto_test.Tpo -c -o tests/tests_misc_test-crypto_test.obj `if test -f 'tests/crypto_test.cpp'; then $(CYGPATH_W) 'tests/crypto_test.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/crypto_test.cpp'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_misc_test-crypto_test.Tpo tests/$(DEPDIR)/tests_misc_test-crypto_test.Po
#	$(AM_V_CXX)source='tests/crypto_test.cpp' object='tests/tests_misc_test-crypto_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_misc_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_misc_test-crypto_test.obj `if test -f 'tests/crypto_test.cpp'; then $(CYGPATH_W) 'tests/crypto_test.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/crypto_test.cpp'; fi`

tests/tests_purge_account-purge_account.o: tests/purge_account.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_purge_account_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_purge_account-purge_account.o -MD -MP -MF tests/$(DEPDIR)/tests_purge_account-purge_account.Tpo -c -o tests/tests_purge_account-purge_account.o `test -f 'tests/purge_account.cpp' || echo '$(srcdir)/'`tests/purge_account.cpp
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_purge_account-purge_account.Tpo tests/$(DEPDIR)/tests_purge_account-purge_account.Po
#	$(AM_V_CXX)source='tests/purge_account.cpp' object='tests/tests_purge_account-purge_account.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_purge_account_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_purge_account-purge_account.o `test -f 'tests/purge_account.cpp' || echo '$(srcdir)/'`tests/purge_account.cpp

tests/tests_purge_account-purge_account.obj: tests/purge_account.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_purge_account_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_purge_account-purge_account.obj -MD -MP -MF tests/$(DEPDIR)/tests_purge_account-purge_account.Tpo -c -o tests/tests_purge_account-purge_account.obj `if test -f 'tests/purge_account.cpp'; then $(CYGPATH_W) 'tests/purge_account.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/purge_account.cpp'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_purge_account-purge_account.Tpo tests/$(DEPDIR)/tests_purge_account-purge_account.Po
#	$(AM_V_CXX)source='tests/purge_account.cpp' object='tests/tests_purge_account-purge_account.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_purge_account_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_purge_account-purge_account.obj `if test -f 'tests/purge_account.cpp'; then $(CYGPATH_W) 'tests/purge_account.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/purge_account.cpp'; fi`

tests/tests_sdk_test-sdktests.o: tests/sdktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_sdk_test-sdktests.o -MD -MP -MF tests/$(DEPDIR)/tests_sdk_test-sdktests.Tpo -c -o tests/tests_sdk_test-sdktests.o `test -f 'tests/sdktests.cpp' || echo '$(srcdir)/'`tests/sdktests.cpp
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_sdk_test-sdktests.Tpo tests/$(DEPDIR)/tests_sdk_test-sdktests.Po
#	$(AM_V_CXX)source='tests/sdktests.cpp' object='tests/tests_sdk_test-sdktests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_sdk_test-sdktests.o `test -f 'tests/sdktests.cpp' || echo '$(srcdir)/'`tests/sdktests.cpp

tests/tests_sdk_test-sdktests.obj: tests/sdktests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_sdk_test-sdktests.obj -MD -MP -MF tests/$(DEPDIR)/tests_sdk_test-sdktests.Tpo -c -o tests/tests_sdk_test-sdktests.obj `if test -f 'tests/sdktests.cpp'; then $(CYGPATH_W) 'tests/sdktests.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/sdktests.cpp'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_sdk_test-sdktests.Tpo tests/$(DEPDIR)/tests_sdk_test-sdktests.Po
#	$(AM_V_CXX)source='tests/sdktests.cpp' object='tests/tests_sdk_test-sdktests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_sdk_test-sdktests.obj `if test -f 'tests/sdktests.cpp'; then $(CYGPATH_W) 'tests/sdktests.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/sdktests.cpp'; fi`

tests/tests_sdk_test-sdk_test.o: tests/sdk_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_sdk_test-sdk_test.o -MD -MP -MF tests/$(DEPDIR)/tests_sdk_test-sdk_test.Tpo -c -o tests/tests_sdk_test-sdk_test.o `test -f 'tests/sdk_test.cpp' || echo '$(srcdir)/'`tests/sdk_test.cpp
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_sdk_test-sdk_test.Tpo tests/$(DEPDIR)/tests_sdk_test-sdk_test.Po
#	$(AM_V_CXX)source='tests/sdk_test.cpp' object='tests/tests_sdk_test-sdk_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_sdk_test-sdk_test.o `test -f 'tests/sdk_test.cpp' || echo '$(srcdir)/'`tests/sdk_test.cpp

tests/tests_sdk_test-sdk_test.obj: tests/sdk_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -MT tests/tests_sdk_test-sdk_test.obj -MD -MP -MF tests/$(DEPDIR)/tests_sdk_test-sdk_test.Tpo -c -o tests/tests_sdk_test-sdk_test.obj `if test -f 'tests/sdk_test.cpp'; then $(CYGPATH_W) 'tests/sdk_test.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/sdk_test.cpp'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_sdk_test-sdk_test.Tpo tests/$(DEPDIR)/tests_sdk_test-sdk_test.Po
#	$(AM_V_CXX)source='tests/sdk_test.cpp' object='tests/tests_sdk_test-sdk_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_sdk_test_CXXFLAGS) $(CXXFLAGS) -c -o tests/tests_sdk_test-sdk_test.obj `if test -f 'tests/sdk_test.cpp'; then $(CYGPATH_W) 'tests/sdk_test.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/sdk_test.cpp'; fi`

.mm.o:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.lo:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTOBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LTOBJCXXCOMPILE) -c -o $@ $<

src/gfx/src_libmega_la-GfxProcCG.lo: src/gfx/GfxProcCG.mm
	$(AM_V_OBJCXX)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT src/gfx/src_libmega_la-GfxProcCG.lo -MD -MP -MF src/gfx/$(DEPDIR)/src_libmega_la-GfxProcCG.Tpo -c -o src/gfx/src_libmega_la-GfxProcCG.lo `test -f 'src/gfx/GfxProcCG.mm' || echo '$(srcdir)/'`src/gfx/GfxProcCG.mm
	$(AM_V_at)$(am__mv) src/gfx/$(DEPDIR)/src_libmega_la-GfxProcCG.Tpo src/gfx/$(DEPDIR)/src_libmega_la-GfxProcCG.Plo
#	$(AM_V_OBJCXX)source='src/gfx/GfxProcCG.mm' object='src/gfx/src_libmega_la-GfxProcCG.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o src/gfx/src_libmega_la-GfxProcCG.lo `test -f 'src/gfx/GfxProcCG.mm' || echo '$(srcdir)/'`src/gfx/GfxProcCG.mm

src/osx/src_libmega_la-osxutils.lo: src/osx/osxutils.mm
	$(AM_V_OBJCXX)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT src/osx/src_libmega_la-osxutils.lo -MD -MP -MF src/osx/$(DEPDIR)/src_libmega_la-osxutils.Tpo -c -o src/osx/src_libmega_la-osxutils.lo `test -f 'src/osx/osxutils.mm' || echo '$(srcdir)/'`src/osx/osxutils.mm
	$(AM_V_at)$(am__mv) src/osx/$(DEPDIR)/src_libmega_la-osxutils.Tpo src/osx/$(DEPDIR)/src_libmega_la-osxutils.Plo
#	$(AM_V_OBJCXX)source='src/osx/osxutils.mm' object='src/osx/src_libmega_la-osxutils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(src_libmega_la_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o src/osx/src_libmega_la-osxutils.lo `test -f 'src/osx/osxutils.mm' || echo '$(srcdir)/'`src/osx/osxutils.mm

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bindings/java/.libs bindings/java/_libs
	-rm -rf bindings/php/.libs bindings/php/_libs
	-rm -rf bindings/python/.libs bindings/python/_libs
	-rm -rf examples/.libs examples/_libs
	-rm -rf examples/linux/.libs examples/linux/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf src/crypto/.libs src/crypto/_libs
	-rm -rf src/db/.libs src/db/_libs
	-rm -rf src/gfx/.libs src/gfx/_libs
	-rm -rf src/osx/.libs src/osx/_libs
	-rm -rf src/posix/.libs src/posix/_libs
	-rm -rf src/thread/.libs src/thread/_libs
	-rm -rf src/win32/.libs src/win32/_libs
	-rm -rf tests/.libs tests/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-nodist_pkgpythonPYTHON: $(nodist_pkgpython_PYTHON)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkgpython_PYTHON)'; dlist=; list2=; test -n "$(pkgpythondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgpythondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgpythondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgpythondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgpythondir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pkgpythondir)" $$dlist; \
	else :; fi

uninstall-nodist_pkgpythonPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgpython_PYTHON)'; test -n "$(pkgpythondir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(pkgpythondir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	py_files_pep3147=`echo "$$py_files" | $(am__pep3147_tweak)`; \
	echo "$$py_files_pep3147";\
	pyc_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|c|'`; \
	pyo_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|o|'`; \
	st=0; \
	for files in \
	  "$$py_files" \
	  "$$pyc_files" \
	  "$$pyo_files" \
	  "$$pyc_files_pep3147" \
	  "$$pyo_files_pep3147" \
	; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pkgpythonPYTHON: $(pkgpython_PYTHON)
	@$(NORMAL_INSTALL)
	@list='$(pkgpython_PYTHON)'; dlist=; list2=; test -n "$(pkgpythondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgpythondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgpythondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgpythondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgpythondir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pkgpythondir)" $$dlist; \
	else :; fi

uninstall-pkgpythonPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgpython_PYTHON)'; test -n "$(pkgpythondir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(pkgpythondir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	py_files_pep3147=`echo "$$py_files" | $(am__pep3147_tweak)`; \
	echo "$$py_files_pep3147";\
	pyc_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|c|'`; \
	pyo_files_pep3147=`echo "$$py_files_pep3147" | sed 's|$$|o|'`; \
	st=0; \
	for files in \
	  "$$py_files" \
	  "$$pyc_files" \
	  "$$pyo_files" \
	  "$$pyc_files_pep3147" \
	  "$$pyo_files_pep3147" \
	; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/misc_test.log: tests/misc_test$(EXEEXT)
	@p='tests/misc_test$(EXEEXT)'; \
	b='tests/misc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/sdk_test.log: tests/sdk_test$(EXEEXT)
	@p='tests/sdk_test$(EXEEXT)'; \
	b='tests/sdk_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/purge_account.log: tests/purge_account$(EXEEXT)
	@p='tests/purge_account$(EXEEXT)'; \
	b='tests/purge_account'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(phpdir)" "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(pkgpyexecdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgpythondir)" "$(DESTDIR)$(pkgpythondir)" "$(DESTDIR)$(pkgconfigdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bindings/java/$(DEPDIR)/$(am__dirstamp)
	-rm -f bindings/java/$(am__dirstamp)
	-rm -f bindings/php/$(DEPDIR)/$(am__dirstamp)
	-rm -f bindings/php/$(am__dirstamp)
	-rm -f bindings/python/$(DEPDIR)/$(am__dirstamp)
	-rm -f bindings/python/$(am__dirstamp)
	-rm -f examples/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/$(am__dirstamp)
	-rm -f examples/linux/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/linux/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/crypto/$(am__dirstamp)
	-rm -f src/db/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/db/$(am__dirstamp)
	-rm -f src/gfx/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/gfx/$(am__dirstamp)
	-rm -f src/osx/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/osx/$(am__dirstamp)
	-rm -f src/posix/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/posix/$(am__dirstamp)
	-rm -f src/thread/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/thread/$(am__dirstamp)
	-rm -f src/win32/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/win32/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS clean-phpLTLIBRARIES \
	clean-pkglibLTLIBRARIES clean-pkgpyexecLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf bindings/java/$(DEPDIR) bindings/php/$(DEPDIR) bindings/python/$(DEPDIR) examples/$(DEPDIR) examples/linux/$(DEPDIR) src/$(DEPDIR) src/crypto/$(DEPDIR) src/db/$(DEPDIR) src/gfx/$(DEPDIR) src/osx/$(DEPDIR) src/posix/$(DEPDIR) src/thread/$(DEPDIR) src/win32/$(DEPDIR) tests/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-nodist_pkgpythonPYTHON install-phpLTLIBRARIES \
	install-pkgconfigDATA install-pkgpythonPYTHON

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES \
	install-pkglibLTLIBRARIES install-pkgpyexecLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf bindings/java/$(DEPDIR) bindings/php/$(DEPDIR) bindings/python/$(DEPDIR) examples/$(DEPDIR) examples/linux/$(DEPDIR) src/$(DEPDIR) src/crypto/$(DEPDIR) src/db/$(DEPDIR) src/gfx/$(DEPDIR) src/osx/$(DEPDIR) src/posix/$(DEPDIR) src/thread/$(DEPDIR) src/win32/$(DEPDIR) tests/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-nodist_pkgpythonPYTHON uninstall-phpLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-pkglibLTLIBRARIES \
	uninstall-pkgpyexecLTLIBRARIES uninstall-pkgpythonPYTHON

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS clean-phpLTLIBRARIES \
	clean-pkglibLTLIBRARIES clean-pkgpyexecLTLIBRARIES cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nodist_pkgpythonPYTHON install-pdf install-pdf-am \
	install-phpLTLIBRARIES install-pkgconfigDATA \
	install-pkglibLTLIBRARIES install-pkgpyexecLTLIBRARIES \
	install-pkgpythonPYTHON install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-nodist_pkgpythonPYTHON uninstall-phpLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-pkglibLTLIBRARIES \
	uninstall-pkgpyexecLTLIBRARIES uninstall-pkgpythonPYTHON

.PRECIOUS: Makefile


##doxygen-ps: doc/api/libmega.ps

##doc/api/libmega.ps: doc/api/libmega.tag
##	cd doc/api/latex; \
##	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
##	$(DX_LATEX) refman.tex; \
##	$(MAKEINDEX_PATH) refman.idx; \
##	$(DX_LATEX) refman.tex; \
##	countdown=5; \
##	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
##					  refman.log > /dev/null 2>&1 \
##	   && test $$countdown -gt 0; do \
##		$(DX_LATEX) refman.tex; \
##		countdown=`expr $$countdown - 1`; \
##	done; \
##	$(DX_DVIPS) -o ../libmega.ps refman.dvi

##doxygen-pdf: doc/api/libmega.pdf

##doc/api/libmega.pdf: doc/api/libmega.tag
##	cd doc/api/latex; \
##	rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
##	$(DX_PDFLATEX) refman.tex; \
##	$(DX_MAKEINDEX) refman.idx; \
##	$(DX_PDFLATEX) refman.tex; \
##	countdown=5; \
##	while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
##					  refman.log > /dev/null 2>&1 \
##	   && test $$countdown -gt 0; do \
##		$(DX_PDFLATEX) refman.tex; \
##		countdown=`expr $$countdown - 1`; \
##	done; \
##	mv refman.pdf ../libmega.pdf

#.PHONY: doxygen-run doxygen-doc $(DX_PS_GOAL) $(DX_PDF_GOAL)

#.INTERMEDIATE: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)

#doxygen-run: doc/api/libmega.tag

#doxygen-doc: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)

#doc/api/libmega.tag: $(DX_CONFIG) $(pkginclude_HEADERS)
#	rm -rf doc/api
#	$(DX_ENV) $(DX_DOXYGEN) $(srcdir)/$(DX_CONFIG)

# depends on libmega
$(EXAMPLES): $(top_builddir)/src/libmega.la

# depends on libmega
$(TESTS): $(top_builddir)/src/libmega.la

#bindings/python/megaapi_wrap.cpp: $(top_srcdir)/bindings/megaapi.i
#	$(SWIG) -threads -python $(SWIG_FLAGS) -I$(top_srcdir)/include -o $@ $(top_srcdir)/bindings/megaapi.i

#bindings/python/__init__.py: bindings/python/megaapi_wrap.cpp
#	touch $@

#bindings/php/megaapi_wrap.cpp: $(top_srcdir)/bindings/megaapi.i
#	$(SWIG) $(SWIG_FLAGS_PHP) -I$(top_srcdir)/include -o $@ $(top_srcdir)/bindings/megaapi.i

bindings/java/megaapi_wrap.cpp: $(top_srcdir)/bindings/megaapi.i
	$(SWIG) -java -package nz.mega.sdk -outdir $(top_srcdir)/bindings/java/nz/mega/sdk -I$(top_srcdir)/include -o $@ $(top_srcdir)/bindings/megaapi.i

cppcheck:
	$(CPPCHECK_CMD) $(CPPCHECK_DIRS)

doc: doxygen-run

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
